/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWhitelistedSenders,
  IWhitelistedSendersInterface,
} from "../../../../src/intf/whitelisted-senders.sol/IWhitelistedSenders";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "Whitelisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldSender",
        type: "address",
      },
    ],
    name: "blacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSender",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IWhitelistedSenders__factory {
  static readonly abi = _abi;
  static createInterface(): IWhitelistedSendersInterface {
    return new Interface(_abi) as IWhitelistedSendersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWhitelistedSenders {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IWhitelistedSenders;
  }
}
