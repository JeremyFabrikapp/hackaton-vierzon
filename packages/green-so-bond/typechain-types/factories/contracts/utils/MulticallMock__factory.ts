/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MulticallMock,
  MulticallMockInterface,
} from "../../../contracts/utils/MulticallMock";

const _abi = [
  {
    inputs: [],
    name: "callRevertTest",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "callTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106608061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806321615e9c146100465780633c67684514610064578063ac9650d81461006e575b600080fd5b61004e61009e565b60405161005b919061023a565b60405180910390f35b61006c6100a7565b005b610088600480360381019061008391906102c4565b6100e2565b6040516100959190610463565b60405180910390f35b60006001905090565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d9906104e2565b60405180910390fd5b60608282905067ffffffffffffffff81111561010157610100610502565b5b60405190808252806020026020018201604052801561013457816020015b606081526020019060019003908161011f5790505b50905060005b8383905081101561021a576000803073ffffffffffffffffffffffffffffffffffffffff1686868581811061017257610171610531565b5b9050602002810190610184919061056f565b604051610192929190610611565b600060405180830381855af49150503d80600081146101cd576040519150601f19603f3d011682016040523d82523d6000602084013e6101d2565b606091505b5091509150811561020157808484815181106101f1576101f0610531565b5b602002602001018190525061020b565b3d6000803e3d6000fd5b5050808060010191505061013a565b5092915050565b6000819050919050565b61023481610221565b82525050565b600060208201905061024f600083018461022b565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102845761028361025f565b5b8235905067ffffffffffffffff8111156102a1576102a0610264565b5b6020830191508360208202830111156102bd576102bc610269565b5b9250929050565b600080602083850312156102db576102da610255565b5b600083013567ffffffffffffffff8111156102f9576102f861025a565b5b6103058582860161026e565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561037757808201518184015260208101905061035c565b60008484015250505050565b6000601f19601f8301169050919050565b600061039f8261033d565b6103a98185610348565b93506103b9818560208601610359565b6103c281610383565b840191505092915050565b60006103d98383610394565b905092915050565b6000602082019050919050565b60006103f982610311565b610403818561031c565b9350836020820285016104158561032d565b8060005b85811015610451578484038952815161043285826103cd565b945061043d836103e1565b925060208a01995050600181019050610419565b50829750879550505050505092915050565b6000602082019050818103600083015261047d81846103ee565b905092915050565b600082825260208201905092915050565b7f7265766572740000000000000000000000000000000000000000000000000000600082015250565b60006104cc600683610485565b91506104d782610496565b602082019050919050565b600060208201905081810360008301526104fb816104bf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261058c5761058b610560565b5b80840192508235915067ffffffffffffffff8211156105ae576105ad610565565b5b6020830192506001820236038313156105ca576105c961056a565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006105f883856105d2565b93506106058385846105dd565b82840190509392505050565b600061061e8284866105ec565b9150819050939250505056fea26469706673582212202159386b0d045d6672aa2c0069e788c166e1e835fd7a7bdcf0e5a1273c6e599264736f6c634300081b0033";

type MulticallMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MulticallMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MulticallMock__factory extends ContractFactory {
  constructor(...args: MulticallMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MulticallMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MulticallMock__factory {
    return super.connect(runner) as MulticallMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MulticallMockInterface {
    return new Interface(_abi) as MulticallMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MulticallMock {
    return new Contract(address, _abi, runner) as unknown as MulticallMock;
  }
}
