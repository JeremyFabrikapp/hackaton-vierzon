/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EIP712Mock,
  EIP712MockInterface,
} from "../../../contracts/cryptography/EIP712Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nameHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "versionHash",
        type: "bytes32",
      },
    ],
    name: "calculateDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101a18061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638ec98aff14610030575b600080fd5b61004a60048036038101906100459190610101565b610060565b6040516100579190610150565b60405180910390f35b600061006c8383610074565b905092915050565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f905060405181815284602082015283604082015246606082015230608082015260a081209250505092915050565b600080fd5b6000819050919050565b6100de816100cb565b81146100e957600080fd5b50565b6000813590506100fb816100d5565b92915050565b60008060408385031215610118576101176100c6565b5b6000610126858286016100ec565b9250506020610137858286016100ec565b9150509250929050565b61014a816100cb565b82525050565b60006020820190506101656000830184610141565b9291505056fea264697066735822122046a7d15c5b0b71c29f930b6f2417b7983b59cb7b0147ba16321ce80ca0c335f664736f6c634300081b0033";

type EIP712MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Mock__factory extends ContractFactory {
  constructor(...args: EIP712MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EIP712Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EIP712Mock__factory {
    return super.connect(runner) as EIP712Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712MockInterface {
    return new Interface(_abi) as EIP712MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EIP712Mock {
    return new Contract(address, _abi, runner) as unknown as EIP712Mock;
  }
}
