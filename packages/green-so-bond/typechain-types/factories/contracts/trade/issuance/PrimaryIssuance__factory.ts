/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PrimaryIssuance,
  PrimaryIssuanceInterface,
} from "../../../../contracts/trade/issuance/PrimaryIssuance";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegister",
        name: "_register",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_offerPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITrade.Status",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "NotifyTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "PrimaryIssuanceCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tradeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ITrade.TradeDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentID",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "contract IRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum ITrade.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c7a380380611c7a833981810160405281019061003291906104ef565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1663a55234b8336040518263ffffffff1660e01b8152600401610073919061053e565b602060405180830381865afa158015610090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b49190610591565b6100f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ea9061061b565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004819055506001600560006101000a81548160ff021916908360058111156101a2576101a161063b565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610696565b6040518263ffffffff1660e01b8152600401610292919061053e565b602060405180830381865afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d391906106c3565b600381905550600160058111156102ed576102ec61063b565b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610696565b73ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f46003546040516103fe91906106ff565b60405180910390a47ff3907ebf6f6c38d243f9cbf61f50741cad6bf3507e2be4526ee2a5e1d1e4549130604051610435919061053e565b60405180910390a1505061071a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047482610449565b9050919050565b600061048682610469565b9050919050565b6104968161047b565b81146104a157600080fd5b50565b6000815190506104b38161048d565b92915050565b6000819050919050565b6104cc816104b9565b81146104d757600080fd5b50565b6000815190506104e9816104c3565b92915050565b6000806040838503121561050657610505610444565b5b6000610514858286016104a4565b9250506020610525858286016104da565b9150509250929050565b61053881610469565b82525050565b6000602082019050610553600083018461052f565b92915050565b60008115159050919050565b61056e81610559565b811461057957600080fd5b50565b60008151905061058b81610565565b92915050565b6000602082840312156105a7576105a6610444565b5b60006105b58482850161057c565b91505092915050565b600082825260208201905092915050565b7f53656e646572206d757374206265206120422644000000000000000000000000600082015250565b60006106056014836105be565b9150610610826105cf565b602082019050919050565b60006020820190508181036000830152610634816105f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61067381610469565b811461067e57600080fd5b50565b6000815190506106908161066a565b92915050565b6000602082840312156106ac576106ab610444565b5b60006106ba84828501610681565b91505092915050565b6000602082840312156106d9576106d8610444565b5b60006106e7848285016104da565b91505092915050565b6106f9816104b9565b82525050565b600060208201905061071460008301846106f0565b92915050565b611551806107296000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634dc415de116100665780634dc415de146101395780635dab2420146101435780636901f66814610161578063d84ffb411461016b578063fbbf93a0146101895761009e565b806310547851146100a35780631aa3a008146100c1578063200d2ed2146100df5780633bf19e29146100fd578063489147d71461011b575b600080fd5b6100ab6101a7565b6040516100b89190610ed7565b60405180910390f35b6100c961023f565b6040516100d69190610f51565b60405180910390f35b6100e7610265565b6040516100f49190610fe3565b60405180910390f35b61010561027c565b6040516101129190611017565b60405180910390f35b610123610282565b6040516101309190610ed7565b60405180910390f35b6101416102ac565b005b61014b6105d6565b6040516101589190610ed7565b60405180910390f35b6101696105fc565b005b610173610c5b565b604051610180919061106d565b60405180910390f35b610191610c6b565b60405161019e919061110e565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a919061115a565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900460ff16905090565b60045481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103339061120a565b60405180910390fd5b6002600560006101000a81548160ff0219169083600581111561036257610361610f6c565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061115a565b6040518263ffffffff1660e01b81526004016104529190610ed7565b602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190611256565b600381905550600560009054906101000a900460ff1660058111156104bb576104ba610f6c565b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610585919061115a565b73ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f46003546040516105cc9190611017565b60405180910390a4565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610604610e01565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a55234b8336040518263ffffffff1660e01b815260040161065f9190610ed7565b602060405180830381865afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a091906112bb565b6106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d690611334565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610766906113c6565b60405180910390fd5b6003600581111561078357610782610f6c565b5b600560009054906101000a900460ff1660058111156107a5576107a4610f6c565b5b141580156107e75750600460058111156107c2576107c1610f6c565b5b600560009054906101000a900460ff1660058111156107e4576107e3610f6c565b5b14155b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90611458565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f5919061115a565b6040518263ffffffff1660e01b81526004016109119190610ed7565b602060405180830381865afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190611256565b60038190555060006003541115610c5157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a32919061115a565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b8152600401610a7693929190611478565b6020604051808303816000875af1158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab991906112bb565b610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef906114fb565b60405180910390fd5b6003600560006101000a81548160ff02191690836005811115610b1e57610b1d610f6c565b5b021790555060036005811115610b3757610b36610f6c565b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638784ff186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c01919061115a565b73ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f4600354604051610c489190611017565b60405180910390a45b610c59610e47565b565b6000803090508060c01b91505090565b610c73610e51565b60006040518060a001604052806003548152602001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b90c1dbb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d579190611256565b8152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632877d4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded9190611256565b815260200160045481525090508091505090565b600260005403610e3d576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ec182610e96565b9050919050565b610ed181610eb6565b82525050565b6000602082019050610eec6000830184610ec8565b92915050565b6000819050919050565b6000610f17610f12610f0d84610e96565b610ef2565b610e96565b9050919050565b6000610f2982610efc565b9050919050565b6000610f3b82610f1e565b9050919050565b610f4b81610f30565b82525050565b6000602082019050610f666000830184610f42565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610fac57610fab610f6c565b5b50565b6000819050610fbd82610f9b565b919050565b6000610fcd82610faf565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b82525050565b600060208201905061102c6000830184611008565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b61106781611032565b82525050565b6000602082019050611082600083018461105e565b92915050565b61109181610ffe565b82525050565b6110a081610eb6565b82525050565b60a0820160008201516110bc6000850182611088565b5060208201516110cf6020850182611097565b5060408201516110e26040850182611088565b5060608201516110f56060850182611088565b5060808201516111086080850182611088565b50505050565b600060a08201905061112360008301846110a6565b92915050565b600080fd5b61113781610eb6565b811461114257600080fd5b50565b6000815190506111548161112e565b92915050565b6000602082840312156111705761116f611129565b5b600061117e84828501611145565b91505092915050565b600082825260208201905092915050565b7f6f6e6c79207468652062656e6566696369617279204226442063616e2072657660008201527f6572740000000000000000000000000000000000000000000000000000000000602082015250565b60006111f4602383611187565b91506111ff82611198565b604082019050919050565b60006020820190508181036000830152611223816111e7565b9050919050565b61123381610ffe565b811461123e57600080fd5b50565b6000815190506112508161122a565b92915050565b60006020828403121561126c5761126b611129565b5b600061127a84828501611241565b91505092915050565b60008115159050919050565b61129881611283565b81146112a357600080fd5b50565b6000815190506112b58161128f565b92915050565b6000602082840312156112d1576112d0611129565b5b60006112df848285016112a6565b91505092915050565b7f53656e646572206d757374206265206120422644000000000000000000000000600082015250565b600061131e601483611187565b9150611329826112e8565b602082019050919050565b6000602082019050818103600083015261134d81611311565b9050919050565b7f6f6e6c79207468652062656e6566696369617279204226442073686f756c642060008201527f66696e616c697a65000000000000000000000000000000000000000000000000602082015250565b60006113b0602883611187565b91506113bb82611354565b604082019050919050565b600060208201905081810360008301526113df816113a3565b9050919050565b7f546865207072696d61727920636f6e74726163742073686f756c64206265206960008201527f6e20696e69746961746564207374617465000000000000000000000000000000602082015250565b6000611442603183611187565b915061144d826113e6565b604082019050919050565b6000602082019050818103600083015261147181611435565b9050919050565b600060608201905061148d6000830186610ec8565b61149a6020830185610ec8565b6114a76040830184611008565b949350505050565b7f746865207472616e7366657220686173206661696c6564000000000000000000600082015250565b60006114e5601783611187565b91506114f0826114af565b602082019050919050565b60006020820190508181036000830152611514816114d8565b905091905056fea26469706673582212201afc4a8d1dd3bbd50d45c5e326827721f196c9c8fb1f1a564fdd71e113ba41f864736f6c634300081b0033";

type PrimaryIssuanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimaryIssuanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimaryIssuance__factory extends ContractFactory {
  constructor(...args: PrimaryIssuanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _register: AddressLike,
    _offerPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_register, _offerPrice, overrides || {});
  }
  override deploy(
    _register: AddressLike,
    _offerPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_register, _offerPrice, overrides || {}) as Promise<
      PrimaryIssuance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimaryIssuance__factory {
    return super.connect(runner) as PrimaryIssuance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimaryIssuanceInterface {
    return new Interface(_abi) as PrimaryIssuanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimaryIssuance {
    return new Contract(address, _abi, runner) as unknown as PrimaryIssuance;
  }
}
