/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BilateralTrade,
  BilateralTradeInterface,
} from "../../../../contracts/trade/bilateral/BilateralTrade";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegister",
        name: "_register",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITrade.Status",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "NotifyTrade",
    type: "event",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [
      {
        internalType: "enum ITrade.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "details",
    outputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valueDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tradeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ITrade.TradeDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentID",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "contract IRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tradeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ITrade.TradeDetail",
        name: "_details",
        type: "tuple",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum ITrade.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051612b0e380380612b0e833981810160405281019061003291906105a0565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505060016000819055508273ffffffffffffffffffffffffffffffffffffffff1663c41251a161009a61041860201b60201c565b6040518263ffffffff1660e01b81526004016100b69190610602565b602060405180830381865afa1580156100d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f79190610655565b8061018557508273ffffffffffffffffffffffffffffffffffffffff1663a55234b861012761041860201b60201c565b6040518263ffffffff1660e01b81526004016101439190610602565b602060405180830381865afa158015610160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101849190610655565b5b6101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb906106df565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663c41251a1836040518263ffffffff1660e01b81526004016101fd9190610602565b602060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610655565b61027d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102749061074b565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102cc61041860201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff021916908360058111156103765761037561076b565b5b0217905550600160149054906101000a900460ff16600581111561039d5761039c61076b565b5b8273ffffffffffffffffffffffffffffffffffffffff166103c261041860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f4600060405161040891906107e9565b60405180910390a450505061094f565b60008060003690509050600061043261049f60201b60201c565b9050610443336104a860201b60201c565b801561044f5750808210155b156104895760003682846104639190610833565b90809261047293929190610871565b9061047d91906108f0565b60601c9250505061049c565b6104976104ed60201b60201c565b925050505b90565b60006014905090565b60006104b86104f560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b6000608051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052f82610504565b9050919050565b600061054182610524565b9050919050565b61055181610536565b811461055c57600080fd5b50565b60008151905061056e81610548565b92915050565b61057d81610524565b811461058857600080fd5b50565b60008151905061059a81610574565b92915050565b6000806000606084860312156105b9576105b86104ff565b5b60006105c78682870161055f565b93505060206105d88682870161058b565b92505060406105e98682870161058b565b9150509250925092565b6105fc81610524565b82525050565b600060208201905061061760008301846105f3565b92915050565b60008115159050919050565b6106328161061d565b811461063d57600080fd5b50565b60008151905061064f81610629565b92915050565b60006020828403121561066b5761066a6104ff565b5b600061067984828501610640565b91505092915050565b600082825260208201905092915050565b7f53656e646572206d75737420626520612076616c696420696e766573746f7200600082015250565b60006106c9601f83610682565b91506106d482610693565b602082019050919050565b600060208201905081810360008301526106f8816106bc565b9050919050565b7f4275796572206d75737420626520612076616c696420696e766573746f720000600082015250565b6000610735601e83610682565b9150610740826106ff565b602082019050919050565b6000602082019050818103600083015261076481610728565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b6000819050919050565b6000819050919050565b60006107d36107ce6107c98461079a565b6107ae565b6107a4565b9050919050565b6107e3816107b8565b82525050565b60006020820190506107fe60008301846107da565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061083e826107a4565b9150610849836107a4565b925082820390508181111561086157610860610804565b5b92915050565b600080fd5b600080fd5b6000808585111561088557610884610867565b5b838611156108965761089561086c565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b60006108fc83836108ac565b8261090781356108b7565b92506014821015610947576109427fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026108e3565b831692505b505092915050565b6080516121a461096a6000396000610c1b01526121a46000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063565974d31161008c578063835d2d2e11610066578063835d2d2e146101e4578063b787cfe614610202578063d84ffb411461021e578063fbbf93a01461023c576100cf565b8063565974d314610174578063572b6c05146101965780637da0a877146101c6576100cf565b806310547851146100d457806312424e3f146100f25780631aa3a00814610110578063200d2ed21461012e578063489147d71461014c5780634dc415de1461016a575b600080fd5b6100dc61025a565b6040516100e991906114af565b60405180910390f35b6100fa610280565b6040516101079190611541565b60405180910390f35b6101186106fb565b60405161012591906115bb565b60405180910390f35b610136610721565b6040516101439190611541565b60405180910390f35b610154610734565b60405161016191906114af565b60405180910390f35b610172610761565b005b61017c610b94565b60405161018d9594939291906115ef565b60405180910390f35b6101b060048036038101906101ab919061167d565b610bd8565b6040516101bd91906116c5565b60405180910390f35b6101ce610c17565b6040516101db91906114af565b60405180910390f35b6101ec610c3f565b6040516101f991906116c5565b60405180910390f35b61021c60048036038101906102179190611829565b610f96565b005b6102266112ab565b6040516102339190611891565b60405180910390f35b6102446112bb565b6040516102519190611932565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102c3611353565b73ffffffffffffffffffffffffffffffffffffffff161480156103195750600060058111156102f5576102f46114ca565b5b600160149054906101000a900460ff166005811115610317576103166114ca565b5b145b1561050957600060036000015411610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d906119aa565b60405180910390fd5b6000600360020154116103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590611a16565b60405180910390fd5b60006003800154116103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611a82565b60405180910390fd5b60018060146101000a81548160ff0219169083600581111561041a576104196114ca565b5b0217905550600160149054906101000a900460ff166005811115610441576104406114ca565b5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f46003600001546040516104ea9190611aa2565b60405180910390a4600160149054906101000a900460ff1690506106f8565b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661054d611353565b73ffffffffffffffffffffffffffffffffffffffff161480156105a357506001600581111561057f5761057e6114ca565b5b600160149054906101000a900460ff1660058111156105a1576105a06114ca565b5b145b156106bd576003600160146101000a81548160ff021916908360058111156105ce576105cd6114ca565b5b0217905550600160149054906101000a900460ff1660058111156105f5576105f46114ca565b5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f460036000015460405161069e9190611aa2565b60405180910390a4600160149054906101000a900460ff1690506106f8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef90611b2f565b60405180910390fd5b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1681565b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026005811115610775576107746114ca565b5b600160149054906101000a900460ff166005811115610797576107966114ca565b5b036107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90611b9b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610818611353565b73ffffffffffffffffffffffffffffffffffffffff1614801561086f57506004600581111561084a576108496114ca565b5b600160149054906101000a900460ff16600581111561086c5761086b6114ca565b5b14155b15610977576002600160146101000a81548160ff0219169083600581111561089a576108996114ca565b5b0217905550600160149054906101000a900460ff1660058111156108c1576108c06114ca565b5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f460036000015460405161096a9190611aa2565b60405180910390a4610b92565b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109bb611353565b73ffffffffffffffffffffffffffffffffffffffff16148015610a4f5750600160058111156109ed576109ec6114ca565b5b600160149054906101000a900460ff166005811115610a0f57610a0e6114ca565b5b1480610a4e575060036005811115610a2a57610a296114ca565b5b600160149054906101000a900460ff166005811115610a4c57610a4b6114ca565b5b145b5b15610b57576002600160146101000a81548160ff02191690836005811115610a7a57610a796114ca565b5b0217905550600160149054906101000a900460ff166005811115610aa157610aa06114ca565b5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f4600360000154604051610b4a9190611aa2565b60405180910390a4610b92565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8990611c2d565b60405180910390fd5b565b60038060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b6000610be2610c17565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610c496113c8565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c8a611353565b73ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611cbf565b60405180910390fd5b60036005811115610cf457610cf36114ca565b5b600160149054906101000a900460ff166005811115610d1657610d156114ca565b5b14610d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4d90611d51565b60405180910390fd5b6004600160146101000a81548160ff02191690836005811115610d7c57610d7b6114ca565b5b02179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600001546040518463ffffffff1660e01b8152600401610e2e93929190611d71565b6020604051808303816000875af1158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e719190611dd4565b905080610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611e4d565b60405180910390fd5b600160149054906101000a900460ff166005811115610ed557610ed46114ca565b5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f4600360000154604051610f7e9190611aa2565b60405180910390a46001915050610f9361140e565b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fd7611353565b73ffffffffffffffffffffffffffffffffffffffff161461102d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102490611edf565b60405180910390fd5b60006005811115611041576110406114ca565b5b600160149054906101000a900460ff166005811115611063576110626114ca565b5b146110a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109a90611f71565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c41251a182602001516040518263ffffffff1660e01b815260040161110291906114af565b602060405180830381865afa15801561111f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111439190611dd4565b611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990612003565b60405180910390fd5b8060036000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155905050600160149054906101000a900460ff166005811115611219576112186114ca565b5b816020015173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f484600001516040516112a09190611aa2565b60405180910390a450565b6000803090508060c01b91505090565b6112c3611429565b60036040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050905090565b600080600036905090506000611367611418565b905061137233610bd8565b801561137e5750808210155b156113b85760003682846113929190612052565b9080926113a193929190612090565b906113ac919061210f565b60601c925050506113c5565b6113c0611421565b925050505b90565b600260005403611404576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b60006014905090565b600033905090565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114998261146e565b9050919050565b6114a98161148e565b82525050565b60006020820190506114c460008301846114a0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061150a576115096114ca565b5b50565b600081905061151b826114f9565b919050565b600061152b8261150d565b9050919050565b61153b81611520565b82525050565b60006020820190506115566000830184611532565b92915050565b6000819050919050565b600061158161157c6115778461146e565b61155c565b61146e565b9050919050565b600061159382611566565b9050919050565b60006115a582611588565b9050919050565b6115b58161159a565b82525050565b60006020820190506115d060008301846115ac565b92915050565b6000819050919050565b6115e9816115d6565b82525050565b600060a08201905061160460008301886115e0565b61161160208301876114a0565b61161e60408301866115e0565b61162b60608301856115e0565b61163860808301846115e0565b9695505050505050565b6000604051905090565b600080fd5b61165a8161148e565b811461166557600080fd5b50565b60008135905061167781611651565b92915050565b6000602082840312156116935761169261164c565b5b60006116a184828501611668565b91505092915050565b60008115159050919050565b6116bf816116aa565b82525050565b60006020820190506116da60008301846116b6565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61172e826116e5565b810181811067ffffffffffffffff8211171561174d5761174c6116f6565b5b80604052505050565b6000611760611642565b905061176c8282611725565b919050565b61177a816115d6565b811461178557600080fd5b50565b60008135905061179781611771565b92915050565b600060a082840312156117b3576117b26116e0565b5b6117bd60a0611756565b905060006117cd84828501611788565b60008301525060206117e184828501611668565b60208301525060406117f584828501611788565b604083015250606061180984828501611788565b606083015250608061181d84828501611788565b60808301525092915050565b600060a0828403121561183f5761183e61164c565b5b600061184d8482850161179d565b91505092915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b61188b81611856565b82525050565b60006020820190506118a66000830184611882565b92915050565b6118b5816115d6565b82525050565b6118c48161148e565b82525050565b60a0820160008201516118e060008501826118ac565b5060208201516118f360208501826118bb565b50604082015161190660408501826118ac565b50606082015161191960608501826118ac565b50608082015161192c60808501826118ac565b50505050565b600060a08201905061194760008301846118ca565b92915050565b600082825260208201905092915050565b7f7175616e74697479206e6f7420646566696e6564000000000000000000000000600082015250565b600061199460148361194d565b915061199f8261195e565b602082019050919050565b600060208201905081810360008301526119c381611987565b9050919050565b7f74726164652064617465206e6f7420646566696e656400000000000000000000600082015250565b6000611a0060168361194d565b9150611a0b826119ca565b602082019050919050565b60006020820190508181036000830152611a2f816119f3565b9050919050565b7f76616c75652064617465206e6f7420646566696e656400000000000000000000600082015250565b6000611a6c60168361194d565b9150611a7782611a36565b602082019050919050565b60006020820190508181036000830152611a9b81611a5f565b9050919050565b6000602082019050611ab760008301846115e0565b92915050565b7f7468652074726164652063616e6e6f7420626520617070726f76656420696e2060008201527f746869732063757272656e742073746174757300000000000000000000000000602082015250565b6000611b1960338361194d565b9150611b2482611abd565b604082019050919050565b60006020820190508181036000830152611b4881611b0c565b9050919050565b7f547261646520616c72656164792072656a656374656400000000000000000000600082015250565b6000611b8560168361194d565b9150611b9082611b4f565b602082019050919050565b60006020820190508181036000830152611bb481611b78565b9050919050565b7f7468652074726164652063616e6e6f742062652072656a656374656420696e2060008201527f746869732063757272656e742073746174757300000000000000000000000000602082015250565b6000611c1760338361194d565b9150611c2282611bbb565b604082019050919050565b60006020820190508181036000830152611c4681611c0a565b9050919050565b7f4f6e6c79207468652073656c6c65722063616e20636f6e6669726d207468652060008201527f7061796d656e74206f6e20746869732074726164650000000000000000000000602082015250565b6000611ca960358361194d565b9150611cb482611c4d565b604082019050919050565b60006020820190508181036000830152611cd881611c9c565b9050919050565b7f546865207472616465206d75737420626520616363657074656420627920746860008201527f65206275796572206265666f7265000000000000000000000000000000000000602082015250565b6000611d3b602e8361194d565b9150611d4682611cdf565b604082019050919050565b60006020820190508181036000830152611d6a81611d2e565b9050919050565b6000606082019050611d8660008301866114a0565b611d9360208301856114a0565b611da060408301846115e0565b949350505050565b611db1816116aa565b8114611dbc57600080fd5b50565b600081519050611dce81611da8565b92915050565b600060208284031215611dea57611de961164c565b5b6000611df884828501611dbf565b91505092915050565b7f746865207472616e7366657220686173206661696c6564000000000000000000600082015250565b6000611e3760178361194d565b9150611e4282611e01565b602082019050919050565b60006020820190508181036000830152611e6681611e2a565b9050919050565b7f4f6e6c79207468652073656c6c65722063616e2075706461746520746869732060008201527f7472616465000000000000000000000000000000000000000000000000000000602082015250565b6000611ec960258361194d565b9150611ed482611e6d565b604082019050919050565b60006020820190508181036000830152611ef881611ebc565b9050919050565b7f43616e6e6f74206368616e6765207468652074726164652064657461696c732060008201527f756e6c65737320696e2064726166742073746174757300000000000000000000602082015250565b6000611f5b60368361194d565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4275796572206d75737420626520612076616c696420696e766573746f72206560008201527f76656e206f6e206368616e67696e672064657461696c73000000000000000000602082015250565b6000611fed60378361194d565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061205d826115d6565b9150612068836115d6565b92508282039050818111156120805761207f612023565b5b92915050565b600080fd5b600080fd5b600080858511156120a4576120a3612086565b5b838611156120b5576120b461208b565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b600061211b83836120cb565b8261212681356120d6565b92506014821015612166576121617fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802612102565b831692505b50509291505056fea2646970667358221220770278fea7983bd87fd664577a8d77dfab0fc7bfd42eaada69632cfbd5facc5464736f6c634300081b0033";

type BilateralTradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BilateralTradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BilateralTrade__factory extends ContractFactory {
  constructor(...args: BilateralTradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _register: AddressLike,
    _buyer: AddressLike,
    _forwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _register,
      _buyer,
      _forwarder,
      overrides || {}
    );
  }
  override deploy(
    _register: AddressLike,
    _buyer: AddressLike,
    _forwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _register,
      _buyer,
      _forwarder,
      overrides || {}
    ) as Promise<
      BilateralTrade & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BilateralTrade__factory {
    return super.connect(runner) as BilateralTrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BilateralTradeInterface {
    return new Interface(_abi) as BilateralTradeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BilateralTrade {
    return new Contract(address, _abi, runner) as unknown as BilateralTrade;
  }
}
