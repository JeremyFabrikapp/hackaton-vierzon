/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DoublyLinkedListBytes32Mock,
  DoublyLinkedListBytes32MockInterface,
} from "../../../contracts/data/DoublyLinkedListBytes32Mock";

const _abi = [
  {
    inputs: [],
    name: "DoublyLinkedList__InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "DoublyLinkedList__NonExistentEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "prevValue",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "insertAfter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nextValue",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "insertBefore",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "next",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pop",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "prev",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "oldValue",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "replace",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shift",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "unshift",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506109e18061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806325a311251161007157806325a311251461018c57806395bc2673146101bc578063a4ece52c146101ec578063b298e36b1461020a578063d1d096951461023a578063efeb67ac1461026a576100a9565b806302d3af5b146100ae57806312718988146100de57806312fc41ca1461010e578063165c089f1461012c5780631d1a696d1461015c575b600080fd5b6100c860048036038101906100c391906108de565b61029a565b6040516100d5919061091a565b60405180910390f35b6100f860048036038101906100f391906108de565b6102b7565b604051610105919061091a565b60405180910390f35b6101166102d4565b604051610123919061091a565b60405180910390f35b61014660048036038101906101419190610935565b6102e5565b6040516101539190610990565b60405180910390f35b610176600480360381019061017191906108de565b610305565b6040516101839190610990565b60405180910390f35b6101a660048036038101906101a19190610935565b610322565b6040516101b39190610990565b60405180910390f35b6101d660048036038101906101d191906108de565b610342565b6040516101e39190610990565b60405180910390f35b6101f461035f565b604051610201919061091a565b60405180910390f35b610224600480360381019061021f91906108de565b610370565b6040516102319190610990565b60405180910390f35b610254600480360381019061024f91906108de565b61038d565b6040516102619190610990565b60405180910390f35b610284600480360381019061027f9190610935565b6103aa565b6040516102919190610990565b60405180910390f35b60006102b08260006103ca90919063ffffffff16565b9050919050565b60006102cd8260006103e190919063ffffffff16565b9050919050565b60006102e060006103f8565b905090565b60006102fd8383600061040d9092919063ffffffff16565b905092915050565b600061031b82600061042690919063ffffffff16565b9050919050565b600061033a8383600061043d9092919063ffffffff16565b905092915050565b600061035882600061045690919063ffffffff16565b9050919050565b600061036b600061046d565b905090565b600061038682600061048290919063ffffffff16565b9050919050565b60006103a382600061049990919063ffffffff16565b9050919050565b60006103c2838360006104b09092919063ffffffff16565b905092915050565b60006103d983600001836104c9565b905092915050565b60006103f0836000018361054a565b905092915050565b6000610406826000016105cb565b9050919050565b600061041d8460000184846105ec565b90509392505050565b6000610435836000018361060c565b905092915050565b600061044d846000018484610663565b90509392505050565b60006104658360000183610683565b905092915050565b600061047b826000016106ee565b9050919050565b6000610491836000018361070f565b905092915050565b60006104a88360000183610734565b905092915050565b60006104c0846000018484610759565b90509392505050565b60008260000160008381526020019081526020016000205490506000801b82141580156104f857506000801b81145b801561050d57508161050a848361054a565b14155b15610544576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60008260010160008381526020019081526020016000205490506000801b821415801561057957506000801b81145b801561058e57508161058b84836104c9565b14155b156105c5576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60006105da826000801b6104c9565b90506105e68282610683565b50919050565b600061060384846105fd87876104c9565b856107fb565b90509392505050565b60008060001b821415801561065b57506000801b8360000160008481526020019081526020016000205414158061065a5750818360010160008060001b815260200190815260200160002054145b5b905092915050565b600061067a84610673868661054a565b85856107fb565b90509392505050565b600061068f838361060c565b156106e8576106b1836106a2858561054a565b6106ac86866104c9565b61086a565b8260010160008381526020019081526020016000206000905582600001600083815260200190815260200160002060009055600190505b92915050565b60006106fd826000801b61054a565b90506107098282610683565b50919050565b600061072c83610722856000801b61054a565b6000801b856107fb565b905092915050565b6000610751836000801b61074b866000801b6104c9565b856107fb565b905092915050565b6000610765848461060c565b61079b576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107b9846107a9868661054a565b6107b387876104c9565b856107fb565b905080156107f45783600101600084815260200190815260200160002060009055836000016000848152602001908152602001600020600090555b9392505050565b60008060001b8203610839576040517f2ea5817800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610843858361060c565b6108625761085285858461086a565b61085d85838561086a565b600190505b949350505050565b80836000016000848152602001908152602001600020819055508183600101600083815260200190815260200160002081905550505050565b600080fd5b6000819050919050565b6108bb816108a8565b81146108c657600080fd5b50565b6000813590506108d8816108b2565b92915050565b6000602082840312156108f4576108f36108a3565b5b6000610902848285016108c9565b91505092915050565b610914816108a8565b82525050565b600060208201905061092f600083018461090b565b92915050565b6000806040838503121561094c5761094b6108a3565b5b600061095a858286016108c9565b925050602061096b858286016108c9565b9150509250929050565b60008115159050919050565b61098a81610975565b82525050565b60006020820190506109a56000830184610981565b9291505056fea2646970667358221220c580a5aabdeec871ffd34a638ce7e3e5bef4453ad76c75daf2eb91d746b5d0bd64736f6c634300081b0033";

type DoublyLinkedListBytes32MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoublyLinkedListBytes32MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoublyLinkedListBytes32Mock__factory extends ContractFactory {
  constructor(...args: DoublyLinkedListBytes32MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DoublyLinkedListBytes32Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DoublyLinkedListBytes32Mock__factory {
    return super.connect(runner) as DoublyLinkedListBytes32Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoublyLinkedListBytes32MockInterface {
    return new Interface(_abi) as DoublyLinkedListBytes32MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoublyLinkedListBytes32Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DoublyLinkedListBytes32Mock;
  }
}
