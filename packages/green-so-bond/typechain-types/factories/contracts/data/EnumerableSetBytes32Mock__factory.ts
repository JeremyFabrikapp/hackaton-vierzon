/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnumerableSetBytes32Mock,
  EnumerableSetBytes32MockInterface,
} from "../../../contracts/data/EnumerableSetBytes32Mock";

const _abi = [
  {
    inputs: [],
    name: "EnumerableSet__IndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toArray",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061081e8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636f4ce56a1161005b5780636f4ce56a14610100578063908ff3031461013057806395bc26731461014e578063e0886f901461017e5761007d565b80631d1a696d146100825780631f7b6d32146100b2578063446bffba146100d0575b600080fd5b61009c60048036038101906100979190610590565b6101ae565b6040516100a991906105d8565b60405180910390f35b6100ba6101cb565b6040516100c7919061060c565b60405180910390f35b6100ea60048036038101906100e59190610590565b6101dc565b6040516100f791906105d8565b60405180910390f35b61011a60048036038101906101159190610590565b6101f9565b604051610127919061060c565b60405180910390f35b610138610216565b60405161014591906106e5565b60405180910390f35b61016860048036038101906101639190610590565b610227565b60405161017591906105d8565b60405180910390f35b61019860048036038101906101939190610733565b610244565b6040516101a5919061076f565b60405180910390f35b60006101c482600061026190919063ffffffff16565b9050919050565b60006101d76000610278565b905090565b60006101f282600061028d90919063ffffffff16565b9050919050565b600061020f8260006102a490919063ffffffff16565b9050919050565b606061022260006102bb565b905090565b600061023d82600061031a90919063ffffffff16565b9050919050565b600061025a82600061033190919063ffffffff16565b9050919050565b60006102708360000183610348565b905092915050565b60006102868260000161036b565b9050919050565b600061029c836000018361037c565b905092915050565b60006102b383600001836103e3565b905092915050565b60608160000160000180548060200260200160405190810160405280929190818152602001828054801561030e57602002820191906000526020600020905b8154815260200190600101908083116102fa575b50505050509050919050565b60006103298360000183610406565b905092915050565b600061034083600001836104ea565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60006103888383610348565b6103dd5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190505b92915050565b600060018360010160008481526020019081526020016000205403905092915050565b600080836001016000848152602001908152602001600020549050600081146104e35760008460000160018660000180549050038154811061044b5761044a61078a565b5b90600052602060002001549050808560000160018403815481106104725761047161078a565b5b9060005260206000200181905550818560010160008381526020019081526020016000208190555050836000018054806104af576104ae6107b9565b5b6001900381819060005260206000200160009055905583600101600084815260200190815260200160002060009055600191505b5092915050565b60008260000180549050821061052c576040517fe637bf3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260000182815481106105425761054161078a565b5b9060005260206000200154905092915050565b600080fd5b6000819050919050565b61056d8161055a565b811461057857600080fd5b50565b60008135905061058a81610564565b92915050565b6000602082840312156105a6576105a5610555565b5b60006105b48482850161057b565b91505092915050565b60008115159050919050565b6105d2816105bd565b82525050565b60006020820190506105ed60008301846105c9565b92915050565b6000819050919050565b610606816105f3565b82525050565b600060208201905061062160008301846105fd565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61065c8161055a565b82525050565b600061066e8383610653565b60208301905092915050565b6000602082019050919050565b600061069282610627565b61069c8185610632565b93506106a783610643565b8060005b838110156106d85781516106bf8882610662565b97506106ca8361067a565b9250506001810190506106ab565b5085935050505092915050565b600060208201905081810360008301526106ff8184610687565b905092915050565b610710816105f3565b811461071b57600080fd5b50565b60008135905061072d81610707565b92915050565b60006020828403121561074957610748610555565b5b60006107578482850161071e565b91505092915050565b6107698161055a565b82525050565b60006020820190506107846000830184610760565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205ec06bcba0d4717ac345341d9bf9af73c8bad5032fa418f4b09f35b8965e485664736f6c634300081b0033";

type EnumerableSetBytes32MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableSetBytes32MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableSetBytes32Mock__factory extends ContractFactory {
  constructor(...args: EnumerableSetBytes32MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnumerableSetBytes32Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EnumerableSetBytes32Mock__factory {
    return super.connect(runner) as EnumerableSetBytes32Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableSetBytes32MockInterface {
    return new Interface(_abi) as EnumerableSetBytes32MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnumerableSetBytes32Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EnumerableSetBytes32Mock;
  }
}
