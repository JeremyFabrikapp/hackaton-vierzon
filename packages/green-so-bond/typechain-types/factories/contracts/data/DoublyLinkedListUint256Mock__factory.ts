/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DoublyLinkedListUint256Mock,
  DoublyLinkedListUint256MockInterface,
} from "../../../contracts/data/DoublyLinkedListUint256Mock";

const _abi = [
  {
    inputs: [],
    name: "DoublyLinkedList__InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "DoublyLinkedList__NonExistentEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prevValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "insertAfter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nextValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "insertBefore",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "next",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "prev",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "replace",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shift",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "unshift",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610a118061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a4ece52c11610071578063a4ece52c1461018c578063c0f0eddc146101aa578063c34052e0146101da578063e81cf24c1461020a578063edd004e51461023a578063f6b3e5851461026a576100a9565b806312fc41ca146100ae57806335671214146100cc5780634cc82215146100fc5780635e77a33c1461012c578063959ac4841461015c575b600080fd5b6100b661029a565b6040516100c391906108ec565b60405180910390f35b6100e660048036038101906100e19190610938565b6102ab565b6040516100f391906108ec565b60405180910390f35b61011660048036038101906101119190610938565b6102c8565b6040516101239190610980565b60405180910390f35b6101466004803603810190610141919061099b565b6102e5565b6040516101539190610980565b60405180910390f35b61017660048036038101906101719190610938565b610305565b6040516101839190610980565b60405180910390f35b610194610322565b6040516101a191906108ec565b60405180910390f35b6101c460048036038101906101bf919061099b565b610333565b6040516101d19190610980565b60405180910390f35b6101f460048036038101906101ef9190610938565b610353565b6040516102019190610980565b60405180910390f35b610224600480360381019061021f919061099b565b610370565b6040516102319190610980565b60405180910390f35b610254600480360381019061024f9190610938565b610390565b60405161026191906108ec565b60405180910390f35b610284600480360381019061027f9190610938565b6103ad565b6040516102919190610980565b60405180910390f35b60006102a660006103ca565b905090565b60006102c18260006103e290919063ffffffff16565b9050919050565b60006102de8260006103ff90919063ffffffff16565b9050919050565b60006102fd838360006104199092919063ffffffff16565b905092915050565b600061031b82600061043890919063ffffffff16565b9050919050565b600061032e6000610452565b905090565b600061034b8383600061046a9092919063ffffffff16565b905092915050565b600061036982600061048990919063ffffffff16565b9050919050565b6000610388838360006104a39092919063ffffffff16565b905092915050565b60006103a68260006104c290919063ffffffff16565b9050919050565b60006103c38260006104df90919063ffffffff16565b9050919050565b60006103d8826000016104f9565b60001c9050919050565b60006103f4836000018360001b61051a565b60001c905092915050565b6000610411836000018360001b61059b565b905092915050565b600061042f846000018460001b8460001b610606565b90509392505050565b600061044a836000018360001b610626565b905092915050565b60006104608260000161064b565b60001c9050919050565b6000610480846000018460001b8460001b61066c565b90509392505050565b600061049b836000018360001b61068c565b905092915050565b60006104b9846000018460001b8460001b6106e3565b90509392505050565b60006104d4836000018360001b610785565b60001c905092915050565b60006104f1836000018360001b610806565b905092915050565b6000610508826000801b610785565b9050610514828261059b565b50919050565b60008260010160008381526020019081526020016000205490506000801b821415801561054957506000801b81145b801561055e57508161055b8483610785565b14155b15610595576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60006105a7838361068c565b15610600576105c9836105ba858561051a565b6105c48686610785565b61082b565b8260010160008381526020019081526020016000206000905582600001600083815260200190815260200160002060009055600190505b92915050565b600061061d84846106178787610785565b85610864565b90509392505050565b600061064383610639856000801b61051a565b6000801b85610864565b905092915050565b600061065a826000801b61051a565b9050610666828261059b565b50919050565b60006106838461067c868661051a565b8585610864565b90509392505050565b60008060001b82141580156106db57506000801b836000016000848152602001908152602001600020541415806106da5750818360010160008060001b815260200190815260200160002054145b5b905092915050565b60006106ef848461068c565b610725576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074384610733868661051a565b61073d8787610785565b85610864565b9050801561077e5783600101600084815260200190815260200160002060009055836000016000848152602001908152602001600020600090555b9392505050565b60008260000160008381526020019081526020016000205490506000801b82141580156107b457506000801b81145b80156107c95750816107c6848361051a565b14155b15610800576040517f1ee3b12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b6000610823836000801b61081d866000801b610785565b85610864565b905092915050565b80836000016000848152602001908152602001600020819055508183600101600083815260200190815260200160002081905550505050565b60008060001b82036108a2576040517f2ea5817800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ac858361068c565b6108cb576108bb85858461082b565b6108c685838561082b565b600190505b949350505050565b6000819050919050565b6108e6816108d3565b82525050565b600060208201905061090160008301846108dd565b92915050565b600080fd5b610915816108d3565b811461092057600080fd5b50565b6000813590506109328161090c565b92915050565b60006020828403121561094e5761094d610907565b5b600061095c84828501610923565b91505092915050565b60008115159050919050565b61097a81610965565b82525050565b60006020820190506109956000830184610971565b92915050565b600080604083850312156109b2576109b1610907565b5b60006109c085828601610923565b92505060206109d185828601610923565b915050925092905056fea2646970667358221220b9cec8fd71e3474d42c57e1cba57be6c251eaec1ea5c1aace2f06eae1d25ae0564736f6c634300081b0033";

type DoublyLinkedListUint256MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoublyLinkedListUint256MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoublyLinkedListUint256Mock__factory extends ContractFactory {
  constructor(...args: DoublyLinkedListUint256MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DoublyLinkedListUint256Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DoublyLinkedListUint256Mock__factory {
    return super.connect(runner) as DoublyLinkedListUint256Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoublyLinkedListUint256MockInterface {
    return new Interface(_abi) as DoublyLinkedListUint256MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoublyLinkedListUint256Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DoublyLinkedListUint256Mock;
  }
}
