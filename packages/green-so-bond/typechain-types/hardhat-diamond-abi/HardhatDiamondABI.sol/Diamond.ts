/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace IRegisterMetadataInternal {
  export type BondDataStruct = {
    name: string;
    isin: string;
    expectedSupply: BigNumberish;
    currency: BytesLike;
    unitValue: BigNumberish;
    couponRate: BigNumberish;
    creationDate: BigNumberish;
    issuanceDate: BigNumberish;
    maturityDate: BigNumberish;
    couponDates: BigNumberish[];
    cutOffTime: BigNumberish;
  };

  export type BondDataStructOutput = [
    name: string,
    isin: string,
    expectedSupply: bigint,
    currency: string,
    unitValue: bigint,
    couponRate: bigint,
    creationDate: bigint,
    issuanceDate: bigint,
    maturityDate: bigint,
    couponDates: bigint[],
    cutOffTime: bigint
  ] & {
    name: string;
    isin: string;
    expectedSupply: bigint;
    currency: string;
    unitValue: bigint;
    couponRate: bigint;
    creationDate: bigint;
    issuanceDate: bigint;
    maturityDate: bigint;
    couponDates: bigint[];
    cutOffTime: bigint;
  };
}

export declare namespace ITrade {
  export type TradeDetailStruct = {
    quantity: BigNumberish;
    buyer: AddressLike;
    tradeDate: BigNumberish;
    valueDate: BigNumberish;
    price: BigNumberish;
  };

  export type TradeDetailStructOutput = [
    quantity: bigint,
    buyer: string,
    tradeDate: bigint,
    valueDate: bigint,
    price: bigint
  ] & {
    quantity: bigint;
    buyer: string;
    tradeDate: bigint;
    valueDate: bigint;
    price: bigint;
  };
}

export interface DiamondInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEFAULT_ADMIN_ROLE"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "getRoleAdmin(bytes32)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "grantRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "hasRole(bytes32,address)"
      | "renounceRole(bytes32,address)"
      | "renounceRole(bytes32,address)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "renounceRole(bytes32)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "revokeRole(bytes32,address)"
      | "supportsInterface(bytes4)"
      | "supportsInterface(bytes4)"
      | "supportsInterface(bytes4)"
      | "supportsInterface(bytes4)"
      | "supportsInterface(bytes4)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "isTrustedForwarder(address)"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "trustedForwarder()"
      | "owner()"
      | "owner()"
      | "owner()"
      | "transferOwnership(address)"
      | "transferOwnership(address)"
      | "transferOwnership(address)"
      | "renounceOwnership()"
      | "renounceOwnership()"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMember(bytes32,uint256)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "getRoleMemberCount(bytes32)"
      | "recover(bytes32,bytes)"
      | "recover(bytes32,uint8,bytes32,bytes32)"
      | "toEthSignedMessageHash"
      | "calculateDomainSeparator"
      | "verify"
      | "add(address)"
      | "add(bytes32)"
      | "add(uint256)"
      | "add(address)"
      | "add(bytes32)"
      | "add(uint256)"
      | "add(uint256,int256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "at(uint256)"
      | "contains(address)"
      | "contains(bytes32)"
      | "contains(uint256)"
      | "contains(address)"
      | "contains(bytes32)"
      | "contains(uint256)"
      | "contains(address)"
      | "contains(uint256)"
      | "contains(address)"
      | "contains(bytes32)"
      | "contains(uint256)"
      | "indexOf(address)"
      | "indexOf(bytes32)"
      | "indexOf(uint256)"
      | "indexOf(address)"
      | "indexOf(bytes32)"
      | "indexOf(uint256)"
      | "length()"
      | "length()"
      | "length()"
      | "length()"
      | "length()"
      | "length()"
      | "length()"
      | "length()"
      | "remove(address)"
      | "remove(bytes32)"
      | "remove(uint256)"
      | "remove(address)"
      | "remove(bytes32)"
      | "remove(uint256)"
      | "remove(address)"
      | "remove(uint256)"
      | "remove(address)"
      | "remove(bytes32)"
      | "remove(uint256)"
      | "root()"
      | "root()"
      | "root()"
      | "root()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "toArray()"
      | "insertAfter(address,address)"
      | "insertAfter(bytes32,bytes32)"
      | "insertAfter(uint256,uint256)"
      | "insertBefore(address,address)"
      | "insertBefore(bytes32,bytes32)"
      | "insertBefore(uint256,uint256)"
      | "next(address)"
      | "next(bytes32)"
      | "next(uint256)"
      | "pop()"
      | "pop()"
      | "pop()"
      | "pop()"
      | "prev(address)"
      | "prev(bytes32)"
      | "prev(uint256)"
      | "push(address)"
      | "push(bytes32)"
      | "push(uint256)"
      | "push(bytes32)"
      | "replace(address,address)"
      | "replace(bytes32,bytes32)"
      | "replace(uint256,uint256)"
      | "shift()"
      | "shift()"
      | "shift()"
      | "unshift(address)"
      | "unshift(bytes32)"
      | "unshift(uint256)"
      | "get(address)"
      | "get(uint256)"
      | "keys()"
      | "keys()"
      | "set(address,address)"
      | "set(uint256,address)"
      | "set(uint256,bytes32)"
      | "values()"
      | "values()"
      | "height"
      | "size"
      | "addCouponDate(uint256)"
      | "addCouponDate(uint256)"
      | "addCouponDate(uint256)"
      | "addressForNewAdmin()"
      | "addressForNewAdmin()"
      | "addressForNewAdmin()"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "allowance(address,address)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve(address,uint256)"
      | "approve()"
      | "approve()"
      | "atReturningHash(address)"
      | "atReturningHash(address)"
      | "atReturningHash(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address,uint256)"
      | "balanceOf(address,uint256)"
      | "balanceOf(address,uint256)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOf(address)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfAt(address,uint256)"
      | "balanceOfCoupon(address,uint256)"
      | "balanceOfCoupon(address,uint256)"
      | "balanceOfCoupon(address,uint256)"
      | "burn(uint256)"
      | "burn(uint256)"
      | "burn(uint256)"
      | "burn(uint256)"
      | "burn(uint256)"
      | "changeAdminRole(address)"
      | "changeAdminRole(address)"
      | "changeAdminRole(address)"
      | "checkIfCouponDateExists(uint256)"
      | "checkIfCouponDateExists(uint256)"
      | "checkIfCouponDateExists(uint256)"
      | "checkIfMaturityDateExists(uint256)"
      | "checkIfMaturityDateExists(uint256)"
      | "checkIfMaturityDateExists(uint256)"
      | "currentCouponDate()"
      | "currentCouponDate()"
      | "currentCouponDate()"
      | "currentSnapshotDatetime()"
      | "currentSnapshotDatetime()"
      | "currentSnapshotDatetime()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decimals()"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "decreaseAllowance(address,uint256)"
      | "delCouponDate(uint256)"
      | "delCouponDate(uint256)"
      | "delCouponDate(uint256)"
      | "disableContractFromWhitelist(bytes32)"
      | "disableContractFromWhitelist(bytes32)"
      | "disableContractFromWhitelist(bytes32)"
      | "disableInvestorFromWhitelist(address)"
      | "disableInvestorFromWhitelist(address)"
      | "disableInvestorFromWhitelist(address)"
      | "enableContractToWhitelist(bytes32)"
      | "enableContractToWhitelist(bytes32)"
      | "enableContractToWhitelist(bytes32)"
      | "enableInvestorToWhitelist(address)"
      | "enableInvestorToWhitelist(address)"
      | "enableInvestorToWhitelist(address)"
      | "firstVoterForNewAdmin()"
      | "firstVoterForNewAdmin()"
      | "firstVoterForNewAdmin()"
      | "getAllInvestors()"
      | "getAllInvestors()"
      | "getAllInvestors()"
      | "getBondCouponRate()"
      | "getBondCouponRate()"
      | "getBondCouponRate()"
      | "getBondData()"
      | "getBondData()"
      | "getBondData()"
      | "getBondUnitValue()"
      | "getBondUnitValue()"
      | "getBondUnitValue()"
      | "getCreationDate()"
      | "getCreationDate()"
      | "getCreationDate()"
      | "getInvestorListAtCoupon(uint256)"
      | "getInvestorListAtCoupon(uint256)"
      | "getInvestorListAtCoupon(uint256)"
      | "getIssuanceDate()"
      | "getIssuanceDate()"
      | "getIssuanceDate()"
      | "grantBndRole(address)"
      | "grantBndRole(address)"
      | "grantBndRole(address)"
      | "grantCakRole(address)"
      | "grantCakRole(address)"
      | "grantCakRole(address)"
      | "grantCstRole(address)"
      | "grantCstRole(address)"
      | "grantCstRole(address)"
      | "grantPayRole(address)"
      | "grantPayRole(address)"
      | "grantPayRole(address)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "increaseAllowance(address,uint256)"
      | "investorCustodian(address)"
      | "investorCustodian(address)"
      | "investorCustodian(address)"
      | "investorsAllowed(address)"
      | "investorsAllowed(address)"
      | "investorsAllowed(address)"
      | "isBnD(address)"
      | "isBnD(address)"
      | "isBnD(address)"
      | "isCAK(address)"
      | "isCAK(address)"
      | "isCAK(address)"
      | "isCallerApprovedSmartContract()"
      | "isCallerApprovedSmartContract()"
      | "isCallerApprovedSmartContract()"
      | "isContractAllowed(address)"
      | "isContractAllowed(address)"
      | "isContractAllowed(address)"
      | "isCustodian(address)"
      | "isCustodian(address)"
      | "isCustodian(address)"
      | "isPay(address)"
      | "isPay(address)"
      | "isPay(address)"
      | "makeReady()"
      | "makeReady()"
      | "makeReady()"
      | "mint(uint256)"
      | "mint(uint256)"
      | "mint(uint256)"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "name()"
      | "nextSnapshotDatetime()"
      | "nextSnapshotDatetime()"
      | "nextSnapshotDatetime()"
      | "primaryIssuanceAccount()"
      | "primaryIssuanceAccount()"
      | "primaryIssuanceAccount()"
      | "publicMessage(address,string)"
      | "publicMessage(address,string)"
      | "publicMessage(address,string)"
      | "registerAdmin()"
      | "registerAdmin()"
      | "registerAdmin()"
      | "returnBalanceToPrimaryIssuanceAccount(address)"
      | "returnBalanceToPrimaryIssuanceAccount(address)"
      | "returnBalanceToPrimaryIssuanceAccount(address)"
      | "revertReady()"
      | "revertReady()"
      | "revertReady()"
      | "revokeBndRole(address)"
      | "revokeBndRole(address)"
      | "revokeBndRole(address)"
      | "revokeCakRole(address)"
      | "revokeCakRole(address)"
      | "revokeCakRole(address)"
      | "revokeCstRole(address)"
      | "revokeCstRole(address)"
      | "revokeCstRole(address)"
      | "revokePayRole(address)"
      | "revokePayRole(address)"
      | "revokePayRole(address)"
      | "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
      | "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
      | "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
      | "setCreationDate(uint256)"
      | "setCreationDate(uint256)"
      | "setCreationDate(uint256)"
      | "setCurrency(bytes32)"
      | "setCurrency(bytes32)"
      | "setCurrency(bytes32)"
      | "setCurrentCouponDate(uint256,uint256)"
      | "setCurrentCouponDate(uint256,uint256)"
      | "setCurrentCouponDate(uint256,uint256)"
      | "setExpectedSupply(uint256)"
      | "setExpectedSupply(uint256)"
      | "setExpectedSupply(uint256)"
      | "setIsinSymbol(string)"
      | "setIsinSymbol(string)"
      | "setIsinSymbol(string)"
      | "setIssuanceDate(uint256)"
      | "setIssuanceDate(uint256)"
      | "setIssuanceDate(uint256)"
      | "setName(string)"
      | "setName(string)"
      | "setName(string)"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "status()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "symbol()"
      | "toggleFrozen()"
      | "toggleFrozen()"
      | "toggleFrozen()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply(uint256)"
      | "totalSupply(uint256)"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupply()"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAt(uint256)"
      | "totalSupplyAtCoupon(uint256)"
      | "totalSupplyAtCoupon(uint256)"
      | "totalSupplyAtCoupon(uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transfer(address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "transferFrom(address,address,uint256)"
      | "votesForNewAdmin()"
      | "votesForNewAdmin()"
      | "votesForNewAdmin()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "BND_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CAK_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "CST_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "PAY_ROLE()"
      | "couponDate()"
      | "couponDate()"
      | "couponDate()"
      | "couponDate()"
      | "cutOfTime()"
      | "cutOfTime()"
      | "cutOfTime()"
      | "cutOfTime()"
      | "getInvestorPayments(address)"
      | "getInvestorPayments(address)"
      | "getInvestorPayments(address)"
      | "getInvestorPayments(address)"
      | "getPaymentAmountForInvestor(address)"
      | "getPaymentAmountForInvestor(address)"
      | "getPaymentAmountForInvestor(address)"
      | "getPaymentAmountForInvestor(address)"
      | "getTotalPaymentAmount()"
      | "getTotalPaymentAmount()"
      | "getTotalPaymentAmount()"
      | "getTotalPaymentAmount()"
      | "investorPayments(address)"
      | "investorPayments(address)"
      | "nbDays()"
      | "nbDays()"
      | "nbDays()"
      | "nbDays()"
      | "payingAgent()"
      | "payingAgent()"
      | "payingAgent()"
      | "payingAgent()"
      | "paymentIdForInvest(address)"
      | "paymentIdForInvest(address)"
      | "paymentIdForInvest(address)"
      | "paymentIdForInvest(address)"
      | "recordDate()"
      | "recordDate()"
      | "recordDate()"
      | "recordDate()"
      | "register()"
      | "register()"
      | "register()"
      | "register()"
      | "register()"
      | "register()"
      | "register()"
      | "rejectCoupon()"
      | "rejectCoupon()"
      | "rejectCoupon()"
      | "rejectCoupon()"
      | "setCutOffTime(uint256,uint256)"
      | "setCutOffTime(uint256,uint256)"
      | "setCutOffTime(uint256,uint256)"
      | "setCutOffTime(uint256,uint256)"
      | "setDateAsCurrentCoupon()"
      | "setDateAsCurrentCoupon()"
      | "setDateAsCurrentCoupon()"
      | "setDateAsCurrentCoupon()"
      | "setNbDays(uint256)"
      | "setNbDays(uint256)"
      | "setNbDays(uint256)"
      | "setNbDays(uint256)"
      | "toggleCouponPayment(address)"
      | "toggleCouponPayment(address)"
      | "toggleCouponPayment(address)"
      | "toggleCouponPayment(address)"
      | "getInvestorRedemptionPayments(address)"
      | "getInvestorRedemptionPayments(address)"
      | "getMaturityAmountForInvestor(address)"
      | "getMaturityAmountForInvestor(address)"
      | "getTotalMaturityAmount()"
      | "getTotalMaturityAmount()"
      | "investorRedemptionPayments(address)"
      | "investorRedemptionPayments(address)"
      | "paymentIdRedemptionForInvest(address)"
      | "paymentIdRedemptionForInvest(address)"
      | "toggleRedemptionPayment(address)"
      | "toggleRedemptionPayment(address)"
      | "greenBondReports(uint256)"
      | "greenBondReports(uint256)"
      | "greenBondReports(uint256)"
      | "greenBondReports(uint256)"
      | "greenBondURI()"
      | "greenBondURI()"
      | "greenBondURI()"
      | "greenBondURI()"
      | "submitGreenBondReport(uint256,string)"
      | "submitGreenBondReport(uint256,string)"
      | "submitGreenBondReport(uint256,string)"
      | "submitGreenBondReport(uint256,string)"
      | "couponContract"
      | "executePayout"
      | "metadataContract"
      | "payoutToken"
      | "_totalSupplyAtCoupon(uint256)"
      | "_totalSupplyAtCoupon(uint256)"
      | "_totalSupplyAtCoupon(uint256)"
      | "_totalSupplyAtCoupon(uint256)"
      | "paused()"
      | "paused()"
      | "balanceOfBatch(address[],uint256[])"
      | "balanceOfBatch(address[],uint256[])"
      | "balanceOfBatch(address[],uint256[])"
      | "isApprovedForAll(address,address)"
      | "isApprovedForAll(address,address)"
      | "isApprovedForAll(address,address)"
      | "isApprovedForAll(address,address)"
      | "isApprovedForAll(address,address)"
      | "isApprovedForAll(address,address)"
      | "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
      | "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
      | "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
      | "safeTransferFrom(address,address,uint256,uint256,bytes)"
      | "safeTransferFrom(address,address,uint256,uint256,bytes)"
      | "safeTransferFrom(address,address,uint256,uint256,bytes)"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "setApprovalForAll(address,bool)"
      | "setApprovalForAll(address,bool)"
      | "setApprovalForAll(address,bool)"
      | "setApprovalForAll(address,bool)"
      | "setApprovalForAll(address,bool)"
      | "setApprovalForAll(address,bool)"
      | "onERC1155BatchReceived"
      | "onERC1155Received"
      | "_balanceOfBatch(address[],uint256[])"
      | "_balanceOfBatch(address[],uint256[])"
      | "_balanceOfBatch(address[],uint256[])"
      | "_balanceOfBatch(address[],uint256[])"
      | "_isApprovedForAll(address,address)"
      | "_isApprovedForAll(address,address)"
      | "_isApprovedForAll(address,address)"
      | "_isApprovedForAll(address,address)"
      | "_setApprovalForAll(address,bool)"
      | "_setApprovalForAll(address,bool)"
      | "_setApprovalForAll(address,bool)"
      | "_setApprovalForAll(address,bool)"
      | "accountsByToken(uint256)"
      | "accountsByToken(uint256)"
      | "tokensByAccount(address)"
      | "tokensByAccount(address)"
      | "totalHolders(uint256)"
      | "totalHolders(uint256)"
      | "_uri(uint256)"
      | "_uri(uint256)"
      | "uri(uint256)"
      | "uri(uint256)"
      | "_burnFrom(address,uint256)"
      | "_burnFrom(address,uint256)"
      | "burnFrom(address,uint256)"
      | "burnFrom(address,uint256)"
      | "getApproved(uint256)"
      | "getApproved(uint256)"
      | "getApproved(uint256)"
      | "ownerOf(uint256)"
      | "ownerOf(uint256)"
      | "ownerOf(uint256)"
      | "onERC721Received"
      | "tokenByIndex(uint256)"
      | "tokenByIndex(uint256)"
      | "tokenOfOwnerByIndex(address,uint256)"
      | "tokenOfOwnerByIndex(address,uint256)"
      | "tokenURI(uint256)"
      | "tokenURI(uint256)"
      | "buyerAccount()"
      | "buyerAccount()"
      | "buyerAccount()"
      | "buyerAccount()"
      | "buyerAccount()"
      | "getDetails()"
      | "getDetails()"
      | "getDetails()"
      | "getDetails()"
      | "getDetails()"
      | "paymentID()"
      | "paymentID()"
      | "paymentID()"
      | "paymentID()"
      | "paymentID()"
      | "sellerAccount()"
      | "sellerAccount()"
      | "sellerAccount()"
      | "sellerAccount()"
      | "sellerAccount()"
      | "details"
      | "executeTransfer()"
      | "executeTransfer()"
      | "reject()"
      | "reject()"
      | "reject()"
      | "reject()"
      | "setDetails((uint256,address,uint256,uint256,uint256))"
      | "setDetails((uint256,address,uint256,uint256,uint256))"
      | "account()"
      | "account()"
      | "offerPrice()"
      | "offerPrice()"
      | "validate()"
      | "validate()"
      | "functionCall(address,bytes,string)"
      | "functionCall(address,bytes)"
      | "functionCallWithValue(address,bytes,uint256)"
      | "functionCallWithValue(address,bytes,uint256,string)"
      | "isContract"
      | "sendValue"
      | "toString(address)"
      | "toString(uint256)"
      | "max(uint256[])"
      | "max(bytes32[])"
      | "max(address[])"
      | "max(uint256,uint256)"
      | "min(bytes32[])"
      | "min(address[])"
      | "min(uint256[])"
      | "min(uint256,uint256)"
      | "multicall(bytes[])"
      | "multicall(bytes[])"
      | "multicall(bytes[])"
      | "abs"
      | "average"
      | "sqrt"
      | "callRevertTest"
      | "callTest"
      | "sub"
      | "toHexString(uint256,uint256)"
      | "toHexString(uint256)"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleAdminChanged(bytes32,bytes32,bytes32)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleGranted(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "RoleRevoked(bytes32,address,address)"
      | "OwnershipTransferred(address,address)"
      | "OwnershipTransferred(address,address)"
      | "OwnershipTransferred(address,address)"
      | "OwnershipTransferred(address,address)"
      | "OwnershipTransferred(address,address)"
      | "OwnershipTransferred(address,address)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "Initialized(uint64)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "AdminChanged(address)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "Approval(address,address,uint256)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableContract(bytes32)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "DisableInvestor(address)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableContract(bytes32)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "EnableInvestor(address)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "NewBondDrafted(address,string,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "PublicMessage(address,address,string)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "RegisterStatusChanged(address,string,string,uint8)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "Snapshot(uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "SnapshotTimestampChange(uint256,uint256,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "Transfer(address,address,uint256)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletAddedToWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "WalletDeletedFromWhitelist(address)"
      | "CouponChanged(address,uint256,uint8)"
      | "CouponChanged(address,uint256,uint8)"
      | "CouponChanged(address,uint256,uint8)"
      | "CouponChanged(address,uint256,uint8)"
      | "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "RedemptionChanged(address,uint256,uint8)"
      | "RedemptionChanged(address,uint256,uint8)"
      | "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GreenBondReportAdded(uint256,string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "GrendBondEmitted(string)"
      | "Paused(address)"
      | "Paused(address)"
      | "Paused(address)"
      | "Unpaused(address)"
      | "Unpaused(address)"
      | "Unpaused(address)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "ApprovalForAll(address,address,bool)"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferBatch(address,address,address,uint256[],uint256[])"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "TransferSingle(address,address,address,uint256,uint256)"
      | "URI(string,uint256)"
      | "URI(string,uint256)"
      | "URI(string,uint256)"
      | "URI(string,uint256)"
      | "NotifyTrade(address,address,uint8,uint256)"
      | "NotifyTrade(address,address,uint8,uint256)"
      | "NotifyTrade(address,address,uint8,uint256)"
      | "NotifyTrade(address,address,uint8,uint256)"
      | "NotifyTrade(address,address,uint8,uint256)"
      | "PrimaryIssuanceCreated(address)"
      | "PrimaryIssuanceCreated(address)"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember(bytes32,uint256)",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "recover(bytes32,bytes)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "recover(bytes32,uint8,bytes32,bytes32)",
    values: [BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toEthSignedMessageHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "calculateDomainSeparator",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "verify",
    values: [BytesLike[], BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "add(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "add(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "add(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "add(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "add(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "add(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "add(uint256,int256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "at(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contains(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "indexOf(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(functionFragment: "length()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "remove(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "remove(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "root()", values?: undefined): string;
  encodeFunctionData(functionFragment: "root()", values?: undefined): string;
  encodeFunctionData(functionFragment: "root()", values?: undefined): string;
  encodeFunctionData(functionFragment: "root()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(functionFragment: "toArray()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "insertAfter(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "insertAfter(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "insertAfter(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "insertBefore(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "insertBefore(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "insertBefore(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "next(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "next(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "next(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "pop()", values?: undefined): string;
  encodeFunctionData(functionFragment: "pop()", values?: undefined): string;
  encodeFunctionData(functionFragment: "pop()", values?: undefined): string;
  encodeFunctionData(functionFragment: "pop()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "prev(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "prev(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "prev(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "push(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "push(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "push(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "push(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "replace(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "replace(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "replace(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "shift()", values?: undefined): string;
  encodeFunctionData(functionFragment: "shift()", values?: undefined): string;
  encodeFunctionData(functionFragment: "shift()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "unshift(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unshift(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unshift(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "keys()", values?: undefined): string;
  encodeFunctionData(functionFragment: "keys()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "set(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "set(uint256,address)",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "set(uint256,bytes32)",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "values()", values?: undefined): string;
  encodeFunctionData(functionFragment: "values()", values?: undefined): string;
  encodeFunctionData(functionFragment: "height", values?: undefined): string;
  encodeFunctionData(functionFragment: "size", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addressForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addressForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addressForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "approve()", values?: undefined): string;
  encodeFunctionData(functionFragment: "approve()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "atReturningHash(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "atReturningHash(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "atReturningHash(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfAt(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfCoupon(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfCoupon(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfCoupon(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAdminRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAdminRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAdminRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfCouponDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfCouponDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfCouponDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "currentCouponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentCouponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentCouponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decimals()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "delCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "delCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "delCouponDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableInvestorFromWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableInvestorFromWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableInvestorFromWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableContractToWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableContractToWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableContractToWhitelist(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableInvestorToWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableInvestorToWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableInvestorToWhitelist(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "firstVoterForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "firstVoterForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "firstVoterForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllInvestors()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllInvestors()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllInvestors()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondCouponRate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondCouponRate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondCouponRate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondData()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondData()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondData()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondUnitValue()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondUnitValue()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBondUnitValue()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCreationDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCreationDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCreationDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getIssuanceDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIssuanceDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIssuanceDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "grantBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantPayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantPayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantPayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "investorCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorsAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorsAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorsAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isBnD(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isBnD(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isBnD(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCAK(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCAK(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCAK(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCallerApprovedSmartContract()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isCallerApprovedSmartContract()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isCallerApprovedSmartContract()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isContractAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isContractAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isContractAllowed(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isCustodian(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isPay(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isPay(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isPay(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "makeReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "makeReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "makeReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mint(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mint(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mint(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(functionFragment: "name()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "nextSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "nextSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "nextSnapshotDatetime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "primaryIssuanceAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "primaryIssuanceAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "primaryIssuanceAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "publicMessage(address,string)",
    values: [AddressLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "publicMessage(address,string)",
    values: [AddressLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "publicMessage(address,string)",
    values: [AddressLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "registerAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revertReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revertReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revertReady()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revokeBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeBndRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCakRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeCstRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokePayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokePayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokePayRole(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    values: [
      string,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    values: [
      string,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    values: [
      string,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreationDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreationDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreationDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrency(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrency(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrency(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setExpectedSupply(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setExpectedSupply(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setExpectedSupply(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setIsinSymbol(string)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setIsinSymbol(string)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setIsinSymbol(string)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setIssuanceDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setIssuanceDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setIssuanceDate(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setName(string)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setName(string)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setName(string)",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "status()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "toggleFrozen()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "toggleFrozen()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "toggleFrozen()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAt(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "votesForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "votesForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "votesForNewAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BND_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CAK_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CST_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAY_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "couponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "couponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "couponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "couponDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cutOfTime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cutOfTime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cutOfTime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cutOfTime()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalPaymentAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalPaymentAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalPaymentAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalPaymentAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "investorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "nbDays()", values?: undefined): string;
  encodeFunctionData(functionFragment: "nbDays()", values?: undefined): string;
  encodeFunctionData(functionFragment: "nbDays()", values?: undefined): string;
  encodeFunctionData(functionFragment: "nbDays()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "payingAgent()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "payingAgent()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "payingAgent()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "payingAgent()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "recordDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "recordDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "recordDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "recordDate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "register()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rejectCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rejectCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rejectCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rejectCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setCutOffTime(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCutOffTime(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCutOffTime(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCutOffTime(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDateAsCurrentCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDateAsCurrentCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDateAsCurrentCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDateAsCurrentCoupon()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setNbDays(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setNbDays(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setNbDays(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setNbDays(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleCouponPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleCouponPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleCouponPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleCouponPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorRedemptionPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInvestorRedemptionPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaturityAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaturityAmountForInvestor(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalMaturityAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalMaturityAmount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "investorRedemptionPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "investorRedemptionPayments(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdRedemptionForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "paymentIdRedemptionForInvest(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleRedemptionPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleRedemptionPayment(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondReports(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondReports(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondReports(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondReports(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondURI()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondURI()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondURI()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "greenBondURI()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "submitGreenBondReport(uint256,string)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "submitGreenBondReport(uint256,string)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "submitGreenBondReport(uint256,string)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "submitGreenBondReport(uint256,string)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "couponContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "executePayout",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "metadataContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "payoutToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "paused()", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    values: [
      AddressLike,
      AddressLike,
      BigNumberish[],
      BigNumberish[],
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    values: [
      AddressLike,
      AddressLike,
      BigNumberish[],
      BigNumberish[],
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    values: [
      AddressLike,
      AddressLike,
      BigNumberish[],
      BigNumberish[],
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [
      AddressLike,
      AddressLike,
      BigNumberish[],
      BigNumberish[],
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [AddressLike, AddressLike, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    values: [AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_isApprovedForAll(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "_setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "_setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "_setApprovalForAll(address,bool)",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "accountsByToken(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "accountsByToken(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokensByAccount(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "tokensByAccount(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "totalHolders(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalHolders(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_uri(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_uri(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "uri(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "uri(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_burnFrom(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_burnFrom(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burnFrom(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burnFrom(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buyerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buyerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buyerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buyerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDetails()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDetails()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDetails()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDetails()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDetails()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "paymentID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sellerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sellerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sellerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sellerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sellerAccount()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "details", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "executeTransfer()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "executeTransfer()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "reject()", values?: undefined): string;
  encodeFunctionData(functionFragment: "reject()", values?: undefined): string;
  encodeFunctionData(functionFragment: "reject()", values?: undefined): string;
  encodeFunctionData(functionFragment: "reject()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setDetails((uint256,address,uint256,uint256,uint256))",
    values: [ITrade.TradeDetailStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDetails((uint256,address,uint256,uint256,uint256))",
    values: [ITrade.TradeDetailStruct]
  ): string;
  encodeFunctionData(functionFragment: "account()", values?: undefined): string;
  encodeFunctionData(functionFragment: "account()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "offerPrice()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "offerPrice()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "validate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "validate()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "functionCall(address,bytes,string)",
    values: [AddressLike, BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "functionCall(address,bytes)",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "functionCallWithValue(address,bytes,uint256)",
    values: [AddressLike, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "functionCallWithValue(address,bytes,uint256,string)",
    values: [AddressLike, BytesLike, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isContract",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "sendValue",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "toString(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "toString(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "max(uint256[])",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "max(bytes32[])",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "max(address[])",
    values: [AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "max(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "min(bytes32[])",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "min(address[])",
    values: [AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "min(uint256[])",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "min(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "multicall(bytes[])",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "multicall(bytes[])",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "multicall(bytes[])",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(functionFragment: "abs", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "average",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "sqrt", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "callRevertTest",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "callTest", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "sub",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "toHexString(uint256,uint256)",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "toHexString(uint256)",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recover(bytes32,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recover(bytes32,uint8,bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toEthSignedMessageHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calculateDomainSeparator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "verify", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "add(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add(uint256,int256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "at(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contains(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "indexOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "remove(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "remove(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "root()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "root()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "root()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "root()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toArray()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "insertAfter(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "insertAfter(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "insertAfter(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "insertBefore(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "insertBefore(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "insertBefore(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "next(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "next(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "next(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pop()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pop()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pop()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pop()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "prev(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "prev(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "prev(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "push(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "push(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "push(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "push(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "replace(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "replace(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "replace(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "shift()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "shift()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "shift()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unshift(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unshift(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unshift(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "keys()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "keys()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set(uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set(uint256,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "values()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "values()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "height", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "size", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowance(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approve(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "atReturningHash(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "atReturningHash(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "atReturningHash(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfAt(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfCoupon(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfCoupon(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfCoupon(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burn(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burn(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burn(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burn(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burn(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeAdminRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeAdminRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeAdminRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfCouponDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfCouponDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfCouponDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkIfMaturityDateExists(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentCouponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentCouponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentCouponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delCouponDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableContractFromWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableInvestorFromWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableInvestorFromWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableInvestorFromWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableContractToWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableContractToWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableContractToWhitelist(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableInvestorToWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableInvestorToWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableInvestorToWhitelist(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "firstVoterForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "firstVoterForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "firstVoterForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllInvestors()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllInvestors()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllInvestors()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondCouponRate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondCouponRate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondCouponRate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondData()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondData()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondData()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondUnitValue()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondUnitValue()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBondUnitValue()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreationDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreationDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreationDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorListAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIssuanceDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIssuanceDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIssuanceDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantPayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantPayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "grantPayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorsAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorsAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorsAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isBnD(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isBnD(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isBnD(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCAK(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCAK(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCAK(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCallerApprovedSmartContract()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCallerApprovedSmartContract()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCallerApprovedSmartContract()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isContractAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isContractAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isContractAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCustodian(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPay(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPay(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPay(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mint(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mint(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mint(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "nextSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nextSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nextSnapshotDatetime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "primaryIssuanceAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "primaryIssuanceAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "primaryIssuanceAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publicMessage(address,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publicMessage(address,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publicMessage(address,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "returnBalanceToPrimaryIssuanceAccount(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revertReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revertReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revertReady()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeBndRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCakRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeCstRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokePayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokePayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokePayRole(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreationDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreationDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreationDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrency(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrency(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrency(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCurrentCouponDate(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExpectedSupply(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExpectedSupply(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExpectedSupply(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIsinSymbol(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIsinSymbol(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIsinSymbol(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIssuanceDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIssuanceDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIssuanceDate(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setName(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setName(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setName(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toggleFrozen()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleFrozen()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleFrozen()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transfer(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votesForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votesForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votesForNewAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BND_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CAK_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CST_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PAY_ROLE()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "couponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "couponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "couponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "couponDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cutOfTime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cutOfTime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cutOfTime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cutOfTime()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalPaymentAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalPaymentAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalPaymentAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalPaymentAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "nbDays()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nbDays()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nbDays()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nbDays()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "payingAgent()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payingAgent()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payingAgent()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payingAgent()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recordDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recordDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recordDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recordDate()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "register()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rejectCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rejectCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rejectCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rejectCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCutOffTime(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCutOffTime(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCutOffTime(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCutOffTime(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDateAsCurrentCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDateAsCurrentCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDateAsCurrentCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDateAsCurrentCoupon()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNbDays(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNbDays(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNbDays(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNbDays(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleCouponPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleCouponPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleCouponPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleCouponPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorRedemptionPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInvestorRedemptionPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaturityAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaturityAmountForInvestor(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalMaturityAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalMaturityAmount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorRedemptionPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "investorRedemptionPayments(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdRedemptionForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentIdRedemptionForInvest(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleRedemptionPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleRedemptionPayment(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondReports(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondReports(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondReports(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondReports(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondURI()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondURI()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondURI()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "greenBondURI()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitGreenBondReport(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitGreenBondReport(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitGreenBondReport(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitGreenBondReport(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "couponContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executePayout",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metadataContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payoutToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_totalSupplyAtCoupon(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "paused()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_balanceOfBatch(address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isApprovedForAll(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setApprovalForAll(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "accountsByToken(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "accountsByToken(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokensByAccount(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokensByAccount(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalHolders(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalHolders(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_uri(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_uri(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uri(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uri(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_burnFrom(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_burnFrom(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnFrom(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnFrom(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenURI(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenURI(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDetails()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDetails()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDetails()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDetails()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDetails()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "paymentID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellerAccount()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "details", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeTransfer()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeTransfer()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reject()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "reject()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "reject()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "reject()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setDetails((uint256,address,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDetails((uint256,address,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "account()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "account()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "offerPrice()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "offerPrice()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "validate()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "validate()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "functionCall(address,bytes,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "functionCall(address,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "functionCallWithValue(address,bytes,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "functionCallWithValue(address,bytes,uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isContract", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sendValue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toString(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toString(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "max(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "max(bytes32[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "max(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "max(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "min(bytes32[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "min(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "min(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "min(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multicall(bytes[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multicall(bytes[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multicall(bytes[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "abs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "average", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sqrt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "callRevertTest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "callTest", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sub", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toHexString(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toHexString(uint256)",
    data: BytesLike
  ): Result;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChanged_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGranted_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevoked_bytes32_address_address_Event {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferred_address_address_Event {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Initialized_uint64_Event {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminChanged_address_Event {
  export type InputTuple = [_addressForNewAdmin: AddressLike];
  export type OutputTuple = [_addressForNewAdmin: string];
  export interface OutputObject {
    _addressForNewAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    spender: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [owner: string, spender: string, value: bigint];
  export interface OutputObject {
    owner: string;
    spender: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Approval_address_address_uint256_Event {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DisableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableContract_bytes32_Event {
  export type InputTuple = [contractHash: BytesLike];
  export type OutputTuple = [contractHash: string];
  export interface OutputObject {
    contractHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EnableInvestor_address_Event {
  export type InputTuple = [investor: AddressLike];
  export type OutputTuple = [investor: string];
  export interface OutputObject {
    investor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewBondDrafted_address_string_string_Event {
  export type InputTuple = [creator: AddressLike, name: string, isin: string];
  export type OutputTuple = [creator: string, name: string, isin: string];
  export interface OutputObject {
    creator: string;
    name: string;
    isin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMessage_address_address_string_Event {
  export type InputTuple = [
    sender: AddressLike,
    target: AddressLike,
    message: string
  ];
  export type OutputTuple = [sender: string, target: string, message: string];
  export interface OutputObject {
    sender: string;
    target: string;
    message: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RegisterStatusChanged_address_string_string_uint8_Event {
  export type InputTuple = [
    emiter: AddressLike,
    name: string,
    isin: string,
    status: BigNumberish
  ];
  export type OutputTuple = [
    emiter: string,
    name: string,
    isin: string,
    status: bigint
  ];
  export interface OutputObject {
    emiter: string;
    name: string;
    isin: string;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Snapshot_uint256_Event {
  export type InputTuple = [id: BigNumberish];
  export type OutputTuple = [id: bigint];
  export interface OutputObject {
    id: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SnapshotTimestampChange_uint256_uint256_uint256_Event {
  export type InputTuple = [
    couponDate: BigNumberish,
    currentTimestamp: BigNumberish,
    nextTimestamp: BigNumberish
  ];
  export type OutputTuple = [
    couponDate: bigint,
    currentTimestamp: bigint,
    nextTimestamp: bigint
  ];
  export interface OutputObject {
    couponDate: bigint;
    currentTimestamp: bigint;
    nextTimestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    value: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, value: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Transfer_address_address_uint256_Event {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletAddedToWhitelist_address_Event {
  export type InputTuple = [toBeAdded: AddressLike];
  export type OutputTuple = [toBeAdded: string];
  export interface OutputObject {
    toBeAdded: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WalletDeletedFromWhitelist_address_Event {
  export type InputTuple = [toBeDeleted: AddressLike];
  export type OutputTuple = [toBeDeleted: string];
  export interface OutputObject {
    toBeDeleted: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RedemptionChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RedemptionChanged_address_uint256_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    status: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    status: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    status: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event {
  export type InputTuple = [
    register: AddressLike,
    couponDate: BigNumberish,
    investor: AddressLike,
    status: BigNumberish,
    previousStatus: BigNumberish
  ];
  export type OutputTuple = [
    register: string,
    couponDate: bigint,
    investor: string,
    status: bigint,
    previousStatus: bigint
  ];
  export interface OutputObject {
    register: string;
    couponDate: bigint;
    investor: string;
    status: bigint;
    previousStatus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GreenBondReportAdded_uint256_string_Event {
  export type InputTuple = [couponDate: BigNumberish, reportURI: string];
  export type OutputTuple = [couponDate: bigint, reportURI: string];
  export interface OutputObject {
    couponDate: bigint;
    reportURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GrendBondEmitted_string_Event {
  export type InputTuple = [greenBondURI: string];
  export type OutputTuple = [greenBondURI: string];
  export interface OutputObject {
    greenBondURI: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Paused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Paused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Paused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Unpaused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Unpaused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Unpaused_address_Event {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    account: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    account: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    account: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAll_address_address_bool_Event {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferBatch_address_address_address_uint256_array_uint256_array_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    ids: BigNumberish[],
    values: BigNumberish[]
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    ids: bigint[],
    values: bigint[]
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    ids: bigint[];
    values: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferSingle_address_address_address_uint256_uint256_Event {
  export type InputTuple = [
    operator: AddressLike,
    from: AddressLike,
    to: AddressLike,
    id: BigNumberish,
    value: BigNumberish
  ];
  export type OutputTuple = [
    operator: string,
    from: string,
    to: string,
    id: bigint,
    value: bigint
  ];
  export interface OutputObject {
    operator: string;
    from: string;
    to: string;
    id: bigint;
    value: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace URI_string_uint256_Event {
  export type InputTuple = [value: string, tokenId: BigNumberish];
  export type OutputTuple = [value: string, tokenId: bigint];
  export interface OutputObject {
    value: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace URI_string_uint256_Event {
  export type InputTuple = [value: string, tokenId: BigNumberish];
  export type OutputTuple = [value: string, tokenId: bigint];
  export interface OutputObject {
    value: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace URI_string_uint256_Event {
  export type InputTuple = [value: string, tokenId: BigNumberish];
  export type OutputTuple = [value: string, tokenId: bigint];
  export interface OutputObject {
    value: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace URI_string_uint256_Event {
  export type InputTuple = [value: string, tokenId: BigNumberish];
  export type OutputTuple = [value: string, tokenId: bigint];
  export interface OutputObject {
    value: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NotifyTrade_address_address_uint8_uint256_Event {
  export type InputTuple = [
    seller: AddressLike,
    buyer: AddressLike,
    status: BigNumberish,
    quantity: BigNumberish
  ];
  export type OutputTuple = [
    seller: string,
    buyer: string,
    status: bigint,
    quantity: bigint
  ];
  export interface OutputObject {
    seller: string;
    buyer: string;
    status: bigint;
    quantity: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NotifyTrade_address_address_uint8_uint256_Event {
  export type InputTuple = [
    seller: AddressLike,
    buyer: AddressLike,
    status: BigNumberish,
    quantity: BigNumberish
  ];
  export type OutputTuple = [
    seller: string,
    buyer: string,
    status: bigint,
    quantity: bigint
  ];
  export interface OutputObject {
    seller: string;
    buyer: string;
    status: bigint;
    quantity: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NotifyTrade_address_address_uint8_uint256_Event {
  export type InputTuple = [
    seller: AddressLike,
    buyer: AddressLike,
    status: BigNumberish,
    quantity: BigNumberish
  ];
  export type OutputTuple = [
    seller: string,
    buyer: string,
    status: bigint,
    quantity: bigint
  ];
  export interface OutputObject {
    seller: string;
    buyer: string;
    status: bigint;
    quantity: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NotifyTrade_address_address_uint8_uint256_Event {
  export type InputTuple = [
    seller: AddressLike,
    buyer: AddressLike,
    status: BigNumberish,
    quantity: BigNumberish
  ];
  export type OutputTuple = [
    seller: string,
    buyer: string,
    status: bigint,
    quantity: bigint
  ];
  export interface OutputObject {
    seller: string;
    buyer: string;
    status: bigint;
    quantity: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NotifyTrade_address_address_uint8_uint256_Event {
  export type InputTuple = [
    seller: AddressLike,
    buyer: AddressLike,
    status: BigNumberish,
    quantity: BigNumberish
  ];
  export type OutputTuple = [
    seller: string,
    buyer: string,
    status: bigint,
    quantity: bigint
  ];
  export interface OutputObject {
    seller: string;
    buyer: string;
    status: bigint;
    quantity: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PrimaryIssuanceCreated_address_Event {
  export type InputTuple = [contractAddress: AddressLike];
  export type OutputTuple = [contractAddress: string];
  export interface OutputObject {
    contractAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PrimaryIssuanceCreated_address_Event {
  export type InputTuple = [contractAddress: AddressLike];
  export type OutputTuple = [contractAddress: string];
  export interface OutputObject {
    contractAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Diamond extends BaseContract {
  connect(runner?: ContractRunner | null): Diamond;
  waitForDeployment(): Promise<this>;

  interface: DiamondInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "getRoleAdmin(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [string],
    "view"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "hasRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  "renounceRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "renounceRole(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeRole(bytes32,address)": TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  "supportsInterface(bytes4)": TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  "supportsInterface(bytes4)": TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  "supportsInterface(bytes4)": TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  "supportsInterface(bytes4)": TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  "supportsInterface(bytes4)": TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "isTrustedForwarder(address)": TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "trustedForwarder()": TypedContractMethod<[], [string], "view">;

  "owner()": TypedContractMethod<[], [string], "view">;

  "owner()": TypedContractMethod<[], [string], "view">;

  "owner()": TypedContractMethod<[], [string], "view">;

  "transferOwnership(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "transferOwnership(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "transferOwnership(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "renounceOwnership()": TypedContractMethod<[], [void], "nonpayable">;

  "renounceOwnership()": TypedContractMethod<[], [void], "nonpayable">;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMember(bytes32,uint256)": TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "getRoleMemberCount(bytes32)": TypedContractMethod<
    [role: BytesLike],
    [bigint],
    "view"
  >;

  "recover(bytes32,bytes)": TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;

  "recover(bytes32,uint8,bytes32,bytes32)": TypedContractMethod<
    [hash: BytesLike, v: BigNumberish, r: BytesLike, s: BytesLike],
    [string],
    "view"
  >;

  toEthSignedMessageHash: TypedContractMethod<
    [hash: BytesLike],
    [string],
    "view"
  >;

  calculateDomainSeparator: TypedContractMethod<
    [nameHash: BytesLike, versionHash: BytesLike],
    [string],
    "view"
  >;

  verify: TypedContractMethod<
    [proof: BytesLike[], root: BytesLike, leaf: BytesLike],
    [boolean],
    "view"
  >;

  "add(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "add(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "add(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "add(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "add(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "add(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "add(uint256,int256)": TypedContractMethod<
    [a: BigNumberish, b: BigNumberish],
    [bigint],
    "view"
  >;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [string], "view">;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [string], "view">;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [bigint], "view">;

  "at(uint256)": TypedContractMethod<
    [index: BigNumberish],
    [[string, string]],
    "view"
  >;

  "at(uint256)": TypedContractMethod<
    [index: BigNumberish],
    [[bigint, string]],
    "view"
  >;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [string], "view">;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [string], "view">;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [bigint], "view">;

  "at(uint256)": TypedContractMethod<[index: BigNumberish], [string], "view">;

  "contains(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "view"
  >;

  "contains(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "view"
  >;

  "contains(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "view"
  >;

  "contains(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "view"
  >;

  "contains(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "view"
  >;

  "contains(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "view"
  >;

  "contains(address)": TypedContractMethod<
    [key: AddressLike],
    [boolean],
    "view"
  >;

  "contains(uint256)": TypedContractMethod<
    [key: BigNumberish],
    [boolean],
    "view"
  >;

  "contains(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "view"
  >;

  "contains(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "view"
  >;

  "contains(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "view"
  >;

  "indexOf(address)": TypedContractMethod<
    [value: AddressLike],
    [bigint],
    "view"
  >;

  "indexOf(bytes32)": TypedContractMethod<[value: BytesLike], [bigint], "view">;

  "indexOf(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [bigint],
    "view"
  >;

  "indexOf(address)": TypedContractMethod<
    [value: AddressLike],
    [bigint],
    "view"
  >;

  "indexOf(bytes32)": TypedContractMethod<[value: BytesLike], [bigint], "view">;

  "indexOf(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [bigint],
    "view"
  >;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "length()": TypedContractMethod<[], [bigint], "view">;

  "remove(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "remove(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "remove(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "remove(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "remove(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "remove(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "remove(address)": TypedContractMethod<
    [key: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "remove(uint256)": TypedContractMethod<
    [key: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "remove(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "remove(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "remove(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "root()": TypedContractMethod<[], [string], "view">;

  "root()": TypedContractMethod<[], [string], "view">;

  "root()": TypedContractMethod<[], [bigint], "view">;

  "root()": TypedContractMethod<[], [string], "view">;

  "toArray()": TypedContractMethod<[], [string[]], "view">;

  "toArray()": TypedContractMethod<[], [string[]], "view">;

  "toArray()": TypedContractMethod<[], [bigint[]], "view">;

  "toArray()": TypedContractMethod<
    [],
    [[string[], string[]] & { keysOut: string[]; valuesOut: string[] }],
    "view"
  >;

  "toArray()": TypedContractMethod<
    [],
    [[bigint[], string[]] & { keysOut: bigint[]; valuesOut: string[] }],
    "view"
  >;

  "toArray()": TypedContractMethod<[], [string[]], "view">;

  "toArray()": TypedContractMethod<[], [string[]], "view">;

  "toArray()": TypedContractMethod<[], [bigint[]], "view">;

  "insertAfter(address,address)": TypedContractMethod<
    [prevValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "insertAfter(bytes32,bytes32)": TypedContractMethod<
    [prevValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "insertAfter(uint256,uint256)": TypedContractMethod<
    [prevValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "insertBefore(address,address)": TypedContractMethod<
    [nextValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "insertBefore(bytes32,bytes32)": TypedContractMethod<
    [nextValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "insertBefore(uint256,uint256)": TypedContractMethod<
    [nextValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "next(address)": TypedContractMethod<[value: AddressLike], [string], "view">;

  "next(bytes32)": TypedContractMethod<[value: BytesLike], [string], "view">;

  "next(uint256)": TypedContractMethod<[value: BigNumberish], [bigint], "view">;

  "pop()": TypedContractMethod<[], [string], "nonpayable">;

  "pop()": TypedContractMethod<[], [string], "nonpayable">;

  "pop()": TypedContractMethod<[], [bigint], "nonpayable">;

  "pop()": TypedContractMethod<[], [void], "nonpayable">;

  "prev(address)": TypedContractMethod<[value: AddressLike], [string], "view">;

  "prev(bytes32)": TypedContractMethod<[value: BytesLike], [string], "view">;

  "prev(uint256)": TypedContractMethod<[value: BigNumberish], [bigint], "view">;

  "push(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "push(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "push(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "push(bytes32)": TypedContractMethod<[hash: BytesLike], [void], "nonpayable">;

  "replace(address,address)": TypedContractMethod<
    [oldValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "replace(bytes32,bytes32)": TypedContractMethod<
    [oldValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "replace(uint256,uint256)": TypedContractMethod<
    [oldValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "shift()": TypedContractMethod<[], [string], "nonpayable">;

  "shift()": TypedContractMethod<[], [string], "nonpayable">;

  "shift()": TypedContractMethod<[], [bigint], "nonpayable">;

  "unshift(address)": TypedContractMethod<
    [value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "unshift(bytes32)": TypedContractMethod<
    [value: BytesLike],
    [boolean],
    "nonpayable"
  >;

  "unshift(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "get(address)": TypedContractMethod<[key: AddressLike], [string], "view">;

  "get(uint256)": TypedContractMethod<[key: BigNumberish], [string], "view">;

  "keys()": TypedContractMethod<[], [string[]], "view">;

  "keys()": TypedContractMethod<[], [bigint[]], "view">;

  "set(address,address)": TypedContractMethod<
    [key: AddressLike, value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "set(uint256,address)": TypedContractMethod<
    [key: BigNumberish, value: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "set(uint256,bytes32)": TypedContractMethod<
    [index: BigNumberish, hash: BytesLike],
    [void],
    "nonpayable"
  >;

  "values()": TypedContractMethod<[], [string[]], "view">;

  "values()": TypedContractMethod<[], [string[]], "view">;

  height: TypedContractMethod<[], [bigint], "view">;

  size: TypedContractMethod<[], [bigint], "view">;

  "addCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "addCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "addCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "addressForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "addressForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "addressForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "allowance(address,address)": TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "approve(address,uint256)": TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "approve()": TypedContractMethod<[], [bigint], "nonpayable">;

  "approve()": TypedContractMethod<[], [bigint], "nonpayable">;

  "atReturningHash(address)": TypedContractMethod<
    [addr: AddressLike],
    [string],
    "view"
  >;

  "atReturningHash(address)": TypedContractMethod<
    [addr: AddressLike],
    [string],
    "view"
  >;

  "atReturningHash(address)": TypedContractMethod<
    [addr_: AddressLike],
    [string],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address,uint256)": TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOf(address,uint256)": TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOf(address,uint256)": TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOf(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfAt(address,uint256)": TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfCoupon(address,uint256)": TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfCoupon(address,uint256)": TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "balanceOfCoupon(address,uint256)": TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "burn(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burn(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burn(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burn(uint256)": TypedContractMethod<
    [amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burn(uint256)": TypedContractMethod<
    [amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "changeAdminRole(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "changeAdminRole(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "changeAdminRole(address)": TypedContractMethod<
    [account: AddressLike],
    [void],
    "nonpayable"
  >;

  "checkIfCouponDateExists(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "checkIfCouponDateExists(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "checkIfCouponDateExists(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [boolean],
    "view"
  >;

  "checkIfMaturityDateExists(uint256)": TypedContractMethod<
    [_maturityDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "checkIfMaturityDateExists(uint256)": TypedContractMethod<
    [_maturityDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "checkIfMaturityDateExists(uint256)": TypedContractMethod<
    [_maturityDate: BigNumberish],
    [boolean],
    "view"
  >;

  "currentCouponDate()": TypedContractMethod<[], [bigint], "view">;

  "currentCouponDate()": TypedContractMethod<[], [bigint], "view">;

  "currentCouponDate()": TypedContractMethod<[], [bigint], "view">;

  "currentSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "currentSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "currentSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decimals()": TypedContractMethod<[], [bigint], "view">;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "decreaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "delCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "delCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "delCouponDate(uint256)": TypedContractMethod<
    [date: BigNumberish],
    [void],
    "nonpayable"
  >;

  "disableContractFromWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "disableContractFromWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "disableContractFromWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "disableInvestorFromWhitelist(address)": TypedContractMethod<
    [investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "disableInvestorFromWhitelist(address)": TypedContractMethod<
    [investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "disableInvestorFromWhitelist(address)": TypedContractMethod<
    [investor_: AddressLike],
    [void],
    "nonpayable"
  >;

  "enableContractToWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "enableContractToWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "enableContractToWhitelist(bytes32)": TypedContractMethod<
    [contractHash: BytesLike],
    [void],
    "nonpayable"
  >;

  "enableInvestorToWhitelist(address)": TypedContractMethod<
    [investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "enableInvestorToWhitelist(address)": TypedContractMethod<
    [investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "enableInvestorToWhitelist(address)": TypedContractMethod<
    [investor_: AddressLike],
    [void],
    "nonpayable"
  >;

  "firstVoterForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "firstVoterForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "firstVoterForNewAdmin()": TypedContractMethod<[], [string], "view">;

  "getAllInvestors()": TypedContractMethod<[], [string[]], "view">;

  "getAllInvestors()": TypedContractMethod<[], [string[]], "view">;

  "getAllInvestors()": TypedContractMethod<[], [string[]], "view">;

  "getBondCouponRate()": TypedContractMethod<[], [bigint], "view">;

  "getBondCouponRate()": TypedContractMethod<[], [bigint], "view">;

  "getBondCouponRate()": TypedContractMethod<[], [bigint], "view">;

  "getBondData()": TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;

  "getBondData()": TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;

  "getBondData()": TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;

  "getBondUnitValue()": TypedContractMethod<[], [bigint], "view">;

  "getBondUnitValue()": TypedContractMethod<[], [bigint], "view">;

  "getBondUnitValue()": TypedContractMethod<[], [bigint], "view">;

  "getCreationDate()": TypedContractMethod<[], [bigint], "view">;

  "getCreationDate()": TypedContractMethod<[], [bigint], "view">;

  "getCreationDate()": TypedContractMethod<[], [bigint], "view">;

  "getInvestorListAtCoupon(uint256)": TypedContractMethod<
    [CouponDate: BigNumberish],
    [string[]],
    "nonpayable"
  >;

  "getInvestorListAtCoupon(uint256)": TypedContractMethod<
    [CouponDate: BigNumberish],
    [string[]],
    "view"
  >;

  "getInvestorListAtCoupon(uint256)": TypedContractMethod<
    [CouponDate: BigNumberish],
    [string[]],
    "nonpayable"
  >;

  "getIssuanceDate()": TypedContractMethod<[], [bigint], "view">;

  "getIssuanceDate()": TypedContractMethod<[], [bigint], "view">;

  "getIssuanceDate()": TypedContractMethod<[], [bigint], "view">;

  "grantBndRole(address)": TypedContractMethod<
    [bndAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantBndRole(address)": TypedContractMethod<
    [bndAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantBndRole(address)": TypedContractMethod<
    [bndAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCakRole(address)": TypedContractMethod<
    [cakAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCakRole(address)": TypedContractMethod<
    [cakAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCakRole(address)": TypedContractMethod<
    [cakAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCstRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCstRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantCstRole(address)": TypedContractMethod<
    [cstAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantPayRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantPayRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "grantPayRole(address)": TypedContractMethod<
    [payAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "increaseAllowance(address,uint256)": TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "investorCustodian(address)": TypedContractMethod<
    [investor: AddressLike],
    [string],
    "view"
  >;

  "investorCustodian(address)": TypedContractMethod<
    [investor: AddressLike],
    [string],
    "view"
  >;

  "investorCustodian(address)": TypedContractMethod<
    [investor: AddressLike],
    [string],
    "view"
  >;

  "investorsAllowed(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "view"
  >;

  "investorsAllowed(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "view"
  >;

  "investorsAllowed(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "view"
  >;

  "isBnD(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isBnD(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isBnD(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCAK(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCAK(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCAK(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCallerApprovedSmartContract()": TypedContractMethod<[], [boolean], "view">;

  "isCallerApprovedSmartContract()": TypedContractMethod<[], [boolean], "view">;

  "isCallerApprovedSmartContract()": TypedContractMethod<[], [boolean], "view">;

  "isContractAllowed(address)": TypedContractMethod<
    [contractAddress: AddressLike],
    [boolean],
    "view"
  >;

  "isContractAllowed(address)": TypedContractMethod<
    [contractAddress: AddressLike],
    [boolean],
    "view"
  >;

  "isContractAllowed(address)": TypedContractMethod<
    [contractAddress_: AddressLike],
    [boolean],
    "view"
  >;

  "isCustodian(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCustodian(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isCustodian(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isPay(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isPay(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "isPay(address)": TypedContractMethod<
    [account: AddressLike],
    [boolean],
    "view"
  >;

  "makeReady()": TypedContractMethod<[], [void], "nonpayable">;

  "makeReady()": TypedContractMethod<[], [void], "nonpayable">;

  "makeReady()": TypedContractMethod<[], [void], "nonpayable">;

  "mint(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "mint(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "mint(uint256)": TypedContractMethod<
    [amount_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "name()": TypedContractMethod<[], [string], "view">;

  "nextSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "nextSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "nextSnapshotDatetime()": TypedContractMethod<[], [bigint], "view">;

  "primaryIssuanceAccount()": TypedContractMethod<[], [string], "view">;

  "primaryIssuanceAccount()": TypedContractMethod<[], [string], "view">;

  "primaryIssuanceAccount()": TypedContractMethod<[], [string], "view">;

  "publicMessage(address,string)": TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;

  "publicMessage(address,string)": TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;

  "publicMessage(address,string)": TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;

  "registerAdmin()": TypedContractMethod<[], [string], "view">;

  "registerAdmin()": TypedContractMethod<[], [string], "view">;

  "registerAdmin()": TypedContractMethod<[], [string], "view">;

  "returnBalanceToPrimaryIssuanceAccount(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "returnBalanceToPrimaryIssuanceAccount(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "returnBalanceToPrimaryIssuanceAccount(address)": TypedContractMethod<
    [investor: AddressLike],
    [boolean],
    "nonpayable"
  >;

  "revertReady()": TypedContractMethod<[], [void], "nonpayable">;

  "revertReady()": TypedContractMethod<[], [void], "nonpayable">;

  "revertReady()": TypedContractMethod<[], [void], "nonpayable">;

  "revokeBndRole(address)": TypedContractMethod<
    [bndAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeBndRole(address)": TypedContractMethod<
    [bndAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeBndRole(address)": TypedContractMethod<
    [bndAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCakRole(address)": TypedContractMethod<
    [cakAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCakRole(address)": TypedContractMethod<
    [cakAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCakRole(address)": TypedContractMethod<
    [cakAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCstRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCstRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokeCstRole(address)": TypedContractMethod<
    [cstAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokePayRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokePayRole(address)": TypedContractMethod<
    [cstAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  "revokePayRole(address)": TypedContractMethod<
    [payAddress_: AddressLike],
    [void],
    "nonpayable"
  >;

  "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)": TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)": TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)": TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "setCreationDate(uint256)": TypedContractMethod<
    [creationDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCreationDate(uint256)": TypedContractMethod<
    [creationDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCreationDate(uint256)": TypedContractMethod<
    [creationDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCurrency(bytes32)": TypedContractMethod<
    [currency: BytesLike],
    [void],
    "nonpayable"
  >;

  "setCurrency(bytes32)": TypedContractMethod<
    [currency: BytesLike],
    [void],
    "nonpayable"
  >;

  "setCurrency(bytes32)": TypedContractMethod<
    [currency: BytesLike],
    [void],
    "nonpayable"
  >;

  "setCurrentCouponDate(uint256,uint256)": TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCurrentCouponDate(uint256,uint256)": TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCurrentCouponDate(uint256,uint256)": TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setExpectedSupply(uint256)": TypedContractMethod<
    [expectedSupply: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setExpectedSupply(uint256)": TypedContractMethod<
    [expectedSupply: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setExpectedSupply(uint256)": TypedContractMethod<
    [expectedSupply: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setIsinSymbol(string)": TypedContractMethod<
    [isinSymbol: string],
    [void],
    "nonpayable"
  >;

  "setIsinSymbol(string)": TypedContractMethod<
    [isinSymbol: string],
    [void],
    "nonpayable"
  >;

  "setIsinSymbol(string)": TypedContractMethod<
    [isinSymbol: string],
    [void],
    "nonpayable"
  >;

  "setIssuanceDate(uint256)": TypedContractMethod<
    [issuanceDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setIssuanceDate(uint256)": TypedContractMethod<
    [issuanceDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setIssuanceDate(uint256)": TypedContractMethod<
    [issuanceDate: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setName(string)": TypedContractMethod<[name_: string], [void], "nonpayable">;

  "setName(string)": TypedContractMethod<[name_: string], [void], "nonpayable">;

  "setName(string)": TypedContractMethod<[name_: string], [void], "nonpayable">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "status()": TypedContractMethod<[], [bigint], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "symbol()": TypedContractMethod<[], [string], "view">;

  "toggleFrozen()": TypedContractMethod<[], [void], "nonpayable">;

  "toggleFrozen()": TypedContractMethod<[], [void], "nonpayable">;

  "toggleFrozen()": TypedContractMethod<[], [void], "nonpayable">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupply(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupply()": TypedContractMethod<[], [bigint], "view">;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAt(uint256)": TypedContractMethod<
    [snapshotId: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transfer(address,uint256)": TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [from_: AddressLike, to_: AddressLike, amount_: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "transferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "votesForNewAdmin()": TypedContractMethod<[], [bigint], "view">;

  "votesForNewAdmin()": TypedContractMethod<[], [bigint], "view">;

  "votesForNewAdmin()": TypedContractMethod<[], [bigint], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "BND_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CAK_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "CST_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "PAY_ROLE()": TypedContractMethod<[], [string], "view">;

  "couponDate()": TypedContractMethod<[], [bigint], "view">;

  "couponDate()": TypedContractMethod<[], [bigint], "view">;

  "couponDate()": TypedContractMethod<[], [bigint], "view">;

  "couponDate()": TypedContractMethod<[], [bigint], "view">;

  "cutOfTime()": TypedContractMethod<[], [bigint], "view">;

  "cutOfTime()": TypedContractMethod<[], [bigint], "view">;

  "cutOfTime()": TypedContractMethod<[], [bigint], "view">;

  "cutOfTime()": TypedContractMethod<[], [bigint], "view">;

  "getInvestorPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getInvestorPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getInvestorPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getInvestorPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getPaymentAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getPaymentAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getPaymentAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getPaymentAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getTotalPaymentAmount()": TypedContractMethod<[], [bigint], "view">;

  "getTotalPaymentAmount()": TypedContractMethod<[], [bigint], "view">;

  "getTotalPaymentAmount()": TypedContractMethod<[], [bigint], "view">;

  "getTotalPaymentAmount()": TypedContractMethod<[], [bigint], "view">;

  "investorPayments(address)": TypedContractMethod<
    [arg0: AddressLike],
    [bigint],
    "view"
  >;

  "investorPayments(address)": TypedContractMethod<
    [arg0: AddressLike],
    [bigint],
    "view"
  >;

  "nbDays()": TypedContractMethod<[], [bigint], "view">;

  "nbDays()": TypedContractMethod<[], [bigint], "view">;

  "nbDays()": TypedContractMethod<[], [bigint], "view">;

  "nbDays()": TypedContractMethod<[], [bigint], "view">;

  "payingAgent()": TypedContractMethod<[], [string], "view">;

  "payingAgent()": TypedContractMethod<[], [string], "view">;

  "payingAgent()": TypedContractMethod<[], [string], "view">;

  "payingAgent()": TypedContractMethod<[], [string], "view">;

  "paymentIdForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "paymentIdForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "paymentIdForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "paymentIdForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "recordDate()": TypedContractMethod<[], [bigint], "view">;

  "recordDate()": TypedContractMethod<[], [bigint], "view">;

  "recordDate()": TypedContractMethod<[], [bigint], "view">;

  "recordDate()": TypedContractMethod<[], [bigint], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "register()": TypedContractMethod<[], [string], "view">;

  "rejectCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "rejectCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "rejectCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "rejectCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "setCutOffTime(uint256,uint256)": TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCutOffTime(uint256,uint256)": TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCutOffTime(uint256,uint256)": TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setCutOffTime(uint256,uint256)": TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setDateAsCurrentCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "setDateAsCurrentCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "setDateAsCurrentCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "setDateAsCurrentCoupon()": TypedContractMethod<[], [void], "nonpayable">;

  "setNbDays(uint256)": TypedContractMethod<
    [_nbDays: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setNbDays(uint256)": TypedContractMethod<
    [_nbDays: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setNbDays(uint256)": TypedContractMethod<
    [_nbDays: BigNumberish],
    [void],
    "nonpayable"
  >;

  "setNbDays(uint256)": TypedContractMethod<
    [_nbDays: BigNumberish],
    [void],
    "nonpayable"
  >;

  "toggleCouponPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "toggleCouponPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "toggleCouponPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "toggleCouponPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "getInvestorRedemptionPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getInvestorRedemptionPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getMaturityAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getMaturityAmountForInvestor(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "getTotalMaturityAmount()": TypedContractMethod<[], [bigint], "view">;

  "getTotalMaturityAmount()": TypedContractMethod<[], [bigint], "view">;

  "investorRedemptionPayments(address)": TypedContractMethod<
    [_investor: AddressLike],
    [bigint],
    "view"
  >;

  "investorRedemptionPayments(address)": TypedContractMethod<
    [arg0: AddressLike],
    [bigint],
    "view"
  >;

  "paymentIdRedemptionForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "paymentIdRedemptionForInvest(address)": TypedContractMethod<
    [_investor: AddressLike],
    [string],
    "view"
  >;

  "toggleRedemptionPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "toggleRedemptionPayment(address)": TypedContractMethod<
    [_investor: AddressLike],
    [void],
    "nonpayable"
  >;

  "greenBondReports(uint256)": TypedContractMethod<
    [couponDate_: BigNumberish],
    [string],
    "view"
  >;

  "greenBondReports(uint256)": TypedContractMethod<
    [couponDate_: BigNumberish],
    [string],
    "view"
  >;

  "greenBondReports(uint256)": TypedContractMethod<
    [couponDate_: BigNumberish],
    [string],
    "view"
  >;

  "greenBondReports(uint256)": TypedContractMethod<
    [couponDate_: BigNumberish],
    [string],
    "view"
  >;

  "greenBondURI()": TypedContractMethod<[], [string], "view">;

  "greenBondURI()": TypedContractMethod<[], [string], "view">;

  "greenBondURI()": TypedContractMethod<[], [string], "view">;

  "greenBondURI()": TypedContractMethod<[], [string], "view">;

  "submitGreenBondReport(uint256,string)": TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;

  "submitGreenBondReport(uint256,string)": TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;

  "submitGreenBondReport(uint256,string)": TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;

  "submitGreenBondReport(uint256,string)": TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;

  couponContract: TypedContractMethod<[], [string], "view">;

  executePayout: TypedContractMethod<
    [couponDate: BigNumberish, amount: BigNumberish, reportURI: string],
    [void],
    "nonpayable"
  >;

  metadataContract: TypedContractMethod<[], [string], "view">;

  payoutToken: TypedContractMethod<[], [string], "view">;

  "_totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "_totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "_totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "_totalSupplyAtCoupon(uint256)": TypedContractMethod<
    [_couponDate: BigNumberish],
    [bigint],
    "view"
  >;

  "paused()": TypedContractMethod<[], [boolean], "view">;

  "paused()": TypedContractMethod<[], [boolean], "view">;

  "balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "safeTransferFrom(address,address,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;

  "safeTransferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "safeTransferFrom(address,address,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;

  "safeTransferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;

  "safeTransferFrom(address,address,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  onERC1155BatchReceived: TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      ids: BigNumberish[],
      values: BigNumberish[],
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  onERC1155Received: TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  "_balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "_balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "_balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "_balanceOfBatch(address[],uint256[])": TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;

  "_isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "_isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "_isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "_isApprovedForAll(address,address)": TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  "_setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "_setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "_setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "_setApprovalForAll(address,bool)": TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;

  "accountsByToken(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [string[]],
    "view"
  >;

  "accountsByToken(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [string[]],
    "view"
  >;

  "tokensByAccount(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint[]],
    "view"
  >;

  "tokensByAccount(address)": TypedContractMethod<
    [account: AddressLike],
    [bigint[]],
    "view"
  >;

  "totalHolders(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [bigint],
    "view"
  >;

  "totalHolders(uint256)": TypedContractMethod<
    [id: BigNumberish],
    [bigint],
    "view"
  >;

  "_uri(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "_uri(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "uri(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "uri(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "_burnFrom(address,uint256)": TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "_burnFrom(address,uint256)": TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burnFrom(address,uint256)": TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "burnFrom(address,uint256)": TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "getApproved(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "getApproved(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "getApproved(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "ownerOf(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "ownerOf(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "ownerOf(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  onERC721Received: TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  "tokenByIndex(uint256)": TypedContractMethod<
    [index: BigNumberish],
    [bigint],
    "view"
  >;

  "tokenByIndex(uint256)": TypedContractMethod<
    [index: BigNumberish],
    [bigint],
    "view"
  >;

  "tokenOfOwnerByIndex(address,uint256)": TypedContractMethod<
    [owner: AddressLike, index: BigNumberish],
    [bigint],
    "view"
  >;

  "tokenOfOwnerByIndex(address,uint256)": TypedContractMethod<
    [owner: AddressLike, index: BigNumberish],
    [bigint],
    "view"
  >;

  "tokenURI(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "tokenURI(uint256)": TypedContractMethod<
    [tokenId: BigNumberish],
    [string],
    "view"
  >;

  "buyerAccount()": TypedContractMethod<[], [string], "view">;

  "buyerAccount()": TypedContractMethod<[], [string], "view">;

  "buyerAccount()": TypedContractMethod<[], [string], "view">;

  "buyerAccount()": TypedContractMethod<[], [string], "view">;

  "buyerAccount()": TypedContractMethod<[], [string], "view">;

  "getDetails()": TypedContractMethod<
    [],
    [ITrade.TradeDetailStructOutput],
    "view"
  >;

  "getDetails()": TypedContractMethod<
    [],
    [ITrade.TradeDetailStructOutput],
    "view"
  >;

  "getDetails()": TypedContractMethod<
    [],
    [ITrade.TradeDetailStructOutput],
    "view"
  >;

  "getDetails()": TypedContractMethod<
    [],
    [ITrade.TradeDetailStructOutput],
    "view"
  >;

  "getDetails()": TypedContractMethod<
    [],
    [ITrade.TradeDetailStructOutput],
    "view"
  >;

  "paymentID()": TypedContractMethod<[], [string], "view">;

  "paymentID()": TypedContractMethod<[], [string], "view">;

  "paymentID()": TypedContractMethod<[], [string], "view">;

  "paymentID()": TypedContractMethod<[], [string], "view">;

  "paymentID()": TypedContractMethod<[], [string], "view">;

  "sellerAccount()": TypedContractMethod<[], [string], "view">;

  "sellerAccount()": TypedContractMethod<[], [string], "view">;

  "sellerAccount()": TypedContractMethod<[], [string], "view">;

  "sellerAccount()": TypedContractMethod<[], [string], "view">;

  "sellerAccount()": TypedContractMethod<[], [string], "view">;

  details: TypedContractMethod<
    [],
    [
      [bigint, string, bigint, bigint, bigint] & {
        quantity: bigint;
        buyer: string;
        tradeDate: bigint;
        valueDate: bigint;
        price: bigint;
      }
    ],
    "view"
  >;

  "executeTransfer()": TypedContractMethod<[], [boolean], "nonpayable">;

  "executeTransfer()": TypedContractMethod<[], [boolean], "nonpayable">;

  "reject()": TypedContractMethod<[], [void], "nonpayable">;

  "reject()": TypedContractMethod<[], [void], "nonpayable">;

  "reject()": TypedContractMethod<[], [void], "nonpayable">;

  "reject()": TypedContractMethod<[], [void], "nonpayable">;

  "setDetails((uint256,address,uint256,uint256,uint256))": TypedContractMethod<
    [_details: ITrade.TradeDetailStruct],
    [void],
    "nonpayable"
  >;

  "setDetails((uint256,address,uint256,uint256,uint256))": TypedContractMethod<
    [_details: ITrade.TradeDetailStruct],
    [void],
    "nonpayable"
  >;

  "account()": TypedContractMethod<[], [string], "view">;

  "account()": TypedContractMethod<[], [string], "view">;

  "offerPrice()": TypedContractMethod<[], [bigint], "view">;

  "offerPrice()": TypedContractMethod<[], [bigint], "view">;

  "validate()": TypedContractMethod<[], [void], "nonpayable">;

  "validate()": TypedContractMethod<[], [void], "nonpayable">;

  "functionCall(address,bytes,string)": TypedContractMethod<
    [target: AddressLike, data: BytesLike, error: string],
    [string],
    "nonpayable"
  >;

  "functionCall(address,bytes)": TypedContractMethod<
    [target: AddressLike, data: BytesLike],
    [string],
    "nonpayable"
  >;

  "functionCallWithValue(address,bytes,uint256)": TypedContractMethod<
    [target: AddressLike, data: BytesLike, value: BigNumberish],
    [string],
    "nonpayable"
  >;

  "functionCallWithValue(address,bytes,uint256,string)": TypedContractMethod<
    [target: AddressLike, data: BytesLike, value: BigNumberish, error: string],
    [string],
    "nonpayable"
  >;

  isContract: TypedContractMethod<[account: AddressLike], [boolean], "view">;

  sendValue: TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  "toString(address)": TypedContractMethod<
    [account: AddressLike],
    [string],
    "view"
  >;

  "toString(uint256)": TypedContractMethod<
    [number: BigNumberish],
    [string],
    "view"
  >;

  "max(uint256[])": TypedContractMethod<
    [array: BigNumberish[]],
    [bigint],
    "view"
  >;

  "max(bytes32[])": TypedContractMethod<[array: BytesLike[]], [string], "view">;

  "max(address[])": TypedContractMethod<
    [array: AddressLike[]],
    [string],
    "view"
  >;

  "max(uint256,uint256)": TypedContractMethod<
    [a: BigNumberish, b: BigNumberish],
    [bigint],
    "view"
  >;

  "min(bytes32[])": TypedContractMethod<[array: BytesLike[]], [string], "view">;

  "min(address[])": TypedContractMethod<
    [array: AddressLike[]],
    [string],
    "view"
  >;

  "min(uint256[])": TypedContractMethod<
    [array: BigNumberish[]],
    [bigint],
    "view"
  >;

  "min(uint256,uint256)": TypedContractMethod<
    [a: BigNumberish, b: BigNumberish],
    [bigint],
    "view"
  >;

  "multicall(bytes[])": TypedContractMethod<
    [data: BytesLike[]],
    [string[]],
    "nonpayable"
  >;

  "multicall(bytes[])": TypedContractMethod<
    [data: BytesLike[]],
    [string[]],
    "nonpayable"
  >;

  "multicall(bytes[])": TypedContractMethod<
    [data: BytesLike[]],
    [string[]],
    "nonpayable"
  >;

  abs: TypedContractMethod<[a: BigNumberish], [bigint], "view">;

  average: TypedContractMethod<
    [a: BigNumberish, b: BigNumberish],
    [bigint],
    "view"
  >;

  sqrt: TypedContractMethod<[x: BigNumberish], [bigint], "view">;

  callRevertTest: TypedContractMethod<[], [void], "view">;

  callTest: TypedContractMethod<[], [bigint], "view">;

  sub: TypedContractMethod<
    [a: BigNumberish, b: BigNumberish],
    [bigint],
    "view"
  >;

  "toHexString(uint256,uint256)": TypedContractMethod<
    [value: BigNumberish, length: BigNumberish],
    [string],
    "view"
  >;

  "toHexString(uint256)": TypedContractMethod<
    [value: BigNumberish],
    [string],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "grantRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hasRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "renounceRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole(bytes32,address)"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "supportsInterface(bytes4)"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "supportsInterface(bytes4)"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "supportsInterface(bytes4)"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "supportsInterface(bytes4)"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "supportsInterface(bytes4)"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedForwarder(address)"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "trustedForwarder()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "transferOwnership(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "transferOwnership(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "transferOwnership(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceOwnership()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceOwnership()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMember(bytes32,uint256)"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRoleMemberCount(bytes32)"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "recover(bytes32,bytes)"
  ): TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "recover(bytes32,uint8,bytes32,bytes32)"
  ): TypedContractMethod<
    [hash: BytesLike, v: BigNumberish, r: BytesLike, s: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "toEthSignedMessageHash"
  ): TypedContractMethod<[hash: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "calculateDomainSeparator"
  ): TypedContractMethod<
    [nameHash: BytesLike, versionHash: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "verify"
  ): TypedContractMethod<
    [proof: BytesLike[], root: BytesLike, leaf: BytesLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "add(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "add(uint256,int256)"
  ): TypedContractMethod<[a: BigNumberish, b: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [[string, string]], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [[bigint, string]], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "at(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "contains(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(address)"
  ): TypedContractMethod<[key: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(uint256)"
  ): TypedContractMethod<[key: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "contains(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "indexOf(address)"
  ): TypedContractMethod<[value: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "indexOf(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "indexOf(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "indexOf(address)"
  ): TypedContractMethod<[value: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "indexOf(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "indexOf(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "length()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "remove(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(address)"
  ): TypedContractMethod<[key: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(uint256)"
  ): TypedContractMethod<[key: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "remove(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "root()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "root()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "root()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "root()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<
    [],
    [[string[], string[]] & { keysOut: string[]; valuesOut: string[] }],
    "view"
  >;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<
    [],
    [[bigint[], string[]] & { keysOut: bigint[]; valuesOut: string[] }],
    "view"
  >;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "toArray()"
  ): TypedContractMethod<[], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "insertAfter(address,address)"
  ): TypedContractMethod<
    [prevValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "insertAfter(bytes32,bytes32)"
  ): TypedContractMethod<
    [prevValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "insertAfter(uint256,uint256)"
  ): TypedContractMethod<
    [prevValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "insertBefore(address,address)"
  ): TypedContractMethod<
    [nextValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "insertBefore(bytes32,bytes32)"
  ): TypedContractMethod<
    [nextValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "insertBefore(uint256,uint256)"
  ): TypedContractMethod<
    [nextValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "next(address)"
  ): TypedContractMethod<[value: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "next(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "next(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "pop()"
  ): TypedContractMethod<[], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "pop()"
  ): TypedContractMethod<[], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "pop()"
  ): TypedContractMethod<[], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "pop()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "prev(address)"
  ): TypedContractMethod<[value: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "prev(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "prev(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "push(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "push(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "push(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "push(bytes32)"
  ): TypedContractMethod<[hash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "replace(address,address)"
  ): TypedContractMethod<
    [oldValue: AddressLike, newValue: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "replace(bytes32,bytes32)"
  ): TypedContractMethod<
    [oldValue: BytesLike, newValue: BytesLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "replace(uint256,uint256)"
  ): TypedContractMethod<
    [oldValue: BigNumberish, newValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "shift()"
  ): TypedContractMethod<[], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "shift()"
  ): TypedContractMethod<[], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "shift()"
  ): TypedContractMethod<[], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "unshift(address)"
  ): TypedContractMethod<[value: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "unshift(bytes32)"
  ): TypedContractMethod<[value: BytesLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "unshift(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "get(address)"
  ): TypedContractMethod<[key: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get(uint256)"
  ): TypedContractMethod<[key: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "keys()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "keys()"
  ): TypedContractMethod<[], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "set(address,address)"
  ): TypedContractMethod<
    [key: AddressLike, value: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "set(uint256,address)"
  ): TypedContractMethod<
    [key: BigNumberish, value: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "set(uint256,bytes32)"
  ): TypedContractMethod<
    [index: BigNumberish, hash: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "values()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "values()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "height"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "size"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "addCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addressForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addressForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addressForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "allowance(address,address)"
  ): TypedContractMethod<
    [holder: AddressLike, spender: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "approve(address,uint256)"
  ): TypedContractMethod<
    [operator: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "approve()"
  ): TypedContractMethod<[], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "approve()"
  ): TypedContractMethod<[], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "atReturningHash(address)"
  ): TypedContractMethod<[addr: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "atReturningHash(address)"
  ): TypedContractMethod<[addr: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "atReturningHash(address)"
  ): TypedContractMethod<[addr_: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOf(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOf(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOf(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfAt(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, snapshotId: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfCoupon(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfCoupon(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfCoupon(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, _couponDate: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "burn(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "burn(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "burn(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "burn(uint256)"
  ): TypedContractMethod<[amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "burn(uint256)"
  ): TypedContractMethod<[amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeAdminRole(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeAdminRole(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeAdminRole(address)"
  ): TypedContractMethod<[account: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "checkIfCouponDateExists(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "checkIfCouponDateExists(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "checkIfCouponDateExists(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "checkIfMaturityDateExists(uint256)"
  ): TypedContractMethod<
    [_maturityDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "checkIfMaturityDateExists(uint256)"
  ): TypedContractMethod<
    [_maturityDate: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "checkIfMaturityDateExists(uint256)"
  ): TypedContractMethod<[_maturityDate: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "currentCouponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "currentCouponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "currentCouponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "currentSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "currentSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "currentSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decimals()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "decreaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, subtractedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "delCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "delCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "delCouponDate(uint256)"
  ): TypedContractMethod<[date: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableContractFromWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableContractFromWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableContractFromWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableInvestorFromWhitelist(address)"
  ): TypedContractMethod<[investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableInvestorFromWhitelist(address)"
  ): TypedContractMethod<[investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableInvestorFromWhitelist(address)"
  ): TypedContractMethod<[investor_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableContractToWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableContractToWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableContractToWhitelist(bytes32)"
  ): TypedContractMethod<[contractHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableInvestorToWhitelist(address)"
  ): TypedContractMethod<[investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableInvestorToWhitelist(address)"
  ): TypedContractMethod<[investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableInvestorToWhitelist(address)"
  ): TypedContractMethod<[investor_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "firstVoterForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "firstVoterForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "firstVoterForNewAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getAllInvestors()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getAllInvestors()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getAllInvestors()"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getBondCouponRate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBondCouponRate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBondCouponRate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBondData()"
  ): TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getBondData()"
  ): TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getBondData()"
  ): TypedContractMethod<
    [],
    [IRegisterMetadataInternal.BondDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getBondUnitValue()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBondUnitValue()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBondUnitValue()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCreationDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCreationDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCreationDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorListAtCoupon(uint256)"
  ): TypedContractMethod<[CouponDate: BigNumberish], [string[]], "nonpayable">;
  getFunction(
    nameOrSignature: "getInvestorListAtCoupon(uint256)"
  ): TypedContractMethod<[CouponDate: BigNumberish], [string[]], "view">;
  getFunction(
    nameOrSignature: "getInvestorListAtCoupon(uint256)"
  ): TypedContractMethod<[CouponDate: BigNumberish], [string[]], "nonpayable">;
  getFunction(
    nameOrSignature: "getIssuanceDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getIssuanceDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getIssuanceDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "grantBndRole(address)"
  ): TypedContractMethod<[bndAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantBndRole(address)"
  ): TypedContractMethod<[bndAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantBndRole(address)"
  ): TypedContractMethod<[bndAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCakRole(address)"
  ): TypedContractMethod<[cakAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCakRole(address)"
  ): TypedContractMethod<[cakAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCakRole(address)"
  ): TypedContractMethod<[cakAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCstRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCstRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantCstRole(address)"
  ): TypedContractMethod<[cstAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantPayRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantPayRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "grantPayRole(address)"
  ): TypedContractMethod<[payAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increaseAllowance(address,uint256)"
  ): TypedContractMethod<
    [spender: AddressLike, addedValue: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "investorCustodian(address)"
  ): TypedContractMethod<[investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "investorCustodian(address)"
  ): TypedContractMethod<[investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "investorCustodian(address)"
  ): TypedContractMethod<[investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "investorsAllowed(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "investorsAllowed(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "investorsAllowed(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isBnD(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isBnD(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isBnD(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCAK(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCAK(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCAK(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCallerApprovedSmartContract()"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCallerApprovedSmartContract()"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCallerApprovedSmartContract()"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "isContractAllowed(address)"
  ): TypedContractMethod<[contractAddress: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isContractAllowed(address)"
  ): TypedContractMethod<[contractAddress: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isContractAllowed(address)"
  ): TypedContractMethod<[contractAddress_: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCustodian(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCustodian(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isCustodian(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isPay(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isPay(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isPay(address)"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "makeReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "makeReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "makeReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "mint(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "mint(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "mint(uint256)"
  ): TypedContractMethod<[amount_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "name()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "nextSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "nextSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "nextSnapshotDatetime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "primaryIssuanceAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "primaryIssuanceAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "primaryIssuanceAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "publicMessage(address,string)"
  ): TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "publicMessage(address,string)"
  ): TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "publicMessage(address,string)"
  ): TypedContractMethod<
    [to: AddressLike, message: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "registerAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "registerAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "registerAdmin()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "returnBalanceToPrimaryIssuanceAccount(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "returnBalanceToPrimaryIssuanceAccount(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "returnBalanceToPrimaryIssuanceAccount(address)"
  ): TypedContractMethod<[investor: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "revertReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revertReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revertReady()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeBndRole(address)"
  ): TypedContractMethod<[bndAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeBndRole(address)"
  ): TypedContractMethod<[bndAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeBndRole(address)"
  ): TypedContractMethod<[bndAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCakRole(address)"
  ): TypedContractMethod<[cakAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCakRole(address)"
  ): TypedContractMethod<[cakAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCakRole(address)"
  ): TypedContractMethod<[cakAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCstRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCstRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeCstRole(address)"
  ): TypedContractMethod<[cstAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokePayRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokePayRole(address)"
  ): TypedContractMethod<[cstAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokePayRole(address)"
  ): TypedContractMethod<[payAddress_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBondData(string,uint256,bytes32,uint256,uint256,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      name_: string,
      expectedSupply_: BigNumberish,
      currency_: BytesLike,
      unitVal_: BigNumberish,
      couponRate_: BigNumberish,
      issuanceDate_: BigNumberish,
      maturityDate_: BigNumberish,
      cutOffTime_: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCreationDate(uint256)"
  ): TypedContractMethod<[creationDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCreationDate(uint256)"
  ): TypedContractMethod<[creationDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCreationDate(uint256)"
  ): TypedContractMethod<[creationDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCurrency(bytes32)"
  ): TypedContractMethod<[currency: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCurrency(bytes32)"
  ): TypedContractMethod<[currency: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCurrency(bytes32)"
  ): TypedContractMethod<[currency: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCurrentCouponDate(uint256,uint256)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCurrentCouponDate(uint256,uint256)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCurrentCouponDate(uint256,uint256)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, recordDatetime_: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setExpectedSupply(uint256)"
  ): TypedContractMethod<[expectedSupply: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setExpectedSupply(uint256)"
  ): TypedContractMethod<[expectedSupply: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setExpectedSupply(uint256)"
  ): TypedContractMethod<[expectedSupply: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIsinSymbol(string)"
  ): TypedContractMethod<[isinSymbol: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIsinSymbol(string)"
  ): TypedContractMethod<[isinSymbol: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIsinSymbol(string)"
  ): TypedContractMethod<[isinSymbol: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIssuanceDate(uint256)"
  ): TypedContractMethod<[issuanceDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIssuanceDate(uint256)"
  ): TypedContractMethod<[issuanceDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setIssuanceDate(uint256)"
  ): TypedContractMethod<[issuanceDate: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setName(string)"
  ): TypedContractMethod<[name_: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setName(string)"
  ): TypedContractMethod<[name_: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setName(string)"
  ): TypedContractMethod<[name_: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "status()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "symbol()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "toggleFrozen()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleFrozen()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleFrozen()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupply()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAt(uint256)"
  ): TypedContractMethod<[snapshotId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [arg0: AddressLike, arg1: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transfer(address,uint256)"
  ): TypedContractMethod<
    [recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from_: AddressLike, to_: AddressLike, amount_: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [holder: AddressLike, recipient: AddressLike, amount: BigNumberish],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "transferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "votesForNewAdmin()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "votesForNewAdmin()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "votesForNewAdmin()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BND_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CAK_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CST_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "PAY_ROLE()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "couponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "couponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "couponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "couponDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "cutOfTime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "cutOfTime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "cutOfTime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "cutOfTime()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPaymentAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPaymentAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPaymentAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPaymentAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalPaymentAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalPaymentAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalPaymentAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalPaymentAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "investorPayments(address)"
  ): TypedContractMethod<[arg0: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "investorPayments(address)"
  ): TypedContractMethod<[arg0: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "nbDays()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "nbDays()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "nbDays()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "nbDays()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "payingAgent()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "payingAgent()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "payingAgent()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "payingAgent()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "paymentIdForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "paymentIdForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "paymentIdForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "paymentIdForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "recordDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "recordDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "recordDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "recordDate()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "register()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "rejectCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "rejectCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "rejectCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "rejectCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setCutOffTime(uint256,uint256)"
  ): TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCutOffTime(uint256,uint256)"
  ): TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCutOffTime(uint256,uint256)"
  ): TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCutOffTime(uint256,uint256)"
  ): TypedContractMethod<
    [_recordDate: BigNumberish, _cutOfTime: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setDateAsCurrentCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setDateAsCurrentCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setDateAsCurrentCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setDateAsCurrentCoupon()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setNbDays(uint256)"
  ): TypedContractMethod<[_nbDays: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setNbDays(uint256)"
  ): TypedContractMethod<[_nbDays: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setNbDays(uint256)"
  ): TypedContractMethod<[_nbDays: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setNbDays(uint256)"
  ): TypedContractMethod<[_nbDays: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleCouponPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleCouponPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleCouponPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleCouponPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getInvestorRedemptionPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInvestorRedemptionPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaturityAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaturityAmountForInvestor(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalMaturityAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTotalMaturityAmount()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "investorRedemptionPayments(address)"
  ): TypedContractMethod<[_investor: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "investorRedemptionPayments(address)"
  ): TypedContractMethod<[arg0: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "paymentIdRedemptionForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "paymentIdRedemptionForInvest(address)"
  ): TypedContractMethod<[_investor: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "toggleRedemptionPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "toggleRedemptionPayment(address)"
  ): TypedContractMethod<[_investor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "greenBondReports(uint256)"
  ): TypedContractMethod<[couponDate_: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondReports(uint256)"
  ): TypedContractMethod<[couponDate_: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondReports(uint256)"
  ): TypedContractMethod<[couponDate_: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondReports(uint256)"
  ): TypedContractMethod<[couponDate_: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondURI()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondURI()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondURI()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "greenBondURI()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "submitGreenBondReport(uint256,string)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "submitGreenBondReport(uint256,string)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "submitGreenBondReport(uint256,string)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "submitGreenBondReport(uint256,string)"
  ): TypedContractMethod<
    [couponDate_: BigNumberish, reportURI_: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "couponContract"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "executePayout"
  ): TypedContractMethod<
    [couponDate: BigNumberish, amount: BigNumberish, reportURI: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "metadataContract"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "payoutToken"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "_totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "_totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "_totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "_totalSupplyAtCoupon(uint256)"
  ): TypedContractMethod<[_couponDate: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "paused()"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "paused()"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onERC1155BatchReceived"
  ): TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      ids: BigNumberish[],
      values: BigNumberish[],
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onERC1155Received"
  ): TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "_balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "_balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "_balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "_balanceOfBatch(address[],uint256[])"
  ): TypedContractMethod<
    [accounts: AddressLike[], ids: BigNumberish[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "_isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "_isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "_isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "_isApprovedForAll(address,address)"
  ): TypedContractMethod<
    [account: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "_setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "_setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "_setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "_setApprovalForAll(address,bool)"
  ): TypedContractMethod<
    [operator: AddressLike, status: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "accountsByToken(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [string[]], "view">;
  getFunction(
    nameOrSignature: "accountsByToken(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [string[]], "view">;
  getFunction(
    nameOrSignature: "tokensByAccount(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "tokensByAccount(address)"
  ): TypedContractMethod<[account: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "totalHolders(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalHolders(uint256)"
  ): TypedContractMethod<[id: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "_uri(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "_uri(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "uri(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "uri(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "_burnFrom(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "_burnFrom(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "burnFrom(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "burnFrom(address,uint256)"
  ): TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getApproved(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getApproved(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getApproved(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "ownerOf(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "ownerOf(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "ownerOf(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "onERC721Received"
  ): TypedContractMethod<
    [
      operator: AddressLike,
      from: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "tokenByIndex(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "tokenByIndex(uint256)"
  ): TypedContractMethod<[index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "tokenOfOwnerByIndex(address,uint256)"
  ): TypedContractMethod<
    [owner: AddressLike, index: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "tokenOfOwnerByIndex(address,uint256)"
  ): TypedContractMethod<
    [owner: AddressLike, index: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "tokenURI(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "tokenURI(uint256)"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "buyerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "buyerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "buyerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "buyerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "buyerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getDetails()"
  ): TypedContractMethod<[], [ITrade.TradeDetailStructOutput], "view">;
  getFunction(
    nameOrSignature: "getDetails()"
  ): TypedContractMethod<[], [ITrade.TradeDetailStructOutput], "view">;
  getFunction(
    nameOrSignature: "getDetails()"
  ): TypedContractMethod<[], [ITrade.TradeDetailStructOutput], "view">;
  getFunction(
    nameOrSignature: "getDetails()"
  ): TypedContractMethod<[], [ITrade.TradeDetailStructOutput], "view">;
  getFunction(
    nameOrSignature: "getDetails()"
  ): TypedContractMethod<[], [ITrade.TradeDetailStructOutput], "view">;
  getFunction(
    nameOrSignature: "paymentID()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "paymentID()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "paymentID()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "paymentID()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "paymentID()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "sellerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "sellerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "sellerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "sellerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "sellerAccount()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "details"
  ): TypedContractMethod<
    [],
    [
      [bigint, string, bigint, bigint, bigint] & {
        quantity: bigint;
        buyer: string;
        tradeDate: bigint;
        valueDate: bigint;
        price: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "executeTransfer()"
  ): TypedContractMethod<[], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "executeTransfer()"
  ): TypedContractMethod<[], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "reject()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "reject()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "reject()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "reject()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setDetails((uint256,address,uint256,uint256,uint256))"
  ): TypedContractMethod<
    [_details: ITrade.TradeDetailStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setDetails((uint256,address,uint256,uint256,uint256))"
  ): TypedContractMethod<
    [_details: ITrade.TradeDetailStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "account()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "account()"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "offerPrice()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "offerPrice()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "validate()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "validate()"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "functionCall(address,bytes,string)"
  ): TypedContractMethod<
    [target: AddressLike, data: BytesLike, error: string],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "functionCall(address,bytes)"
  ): TypedContractMethod<
    [target: AddressLike, data: BytesLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "functionCallWithValue(address,bytes,uint256)"
  ): TypedContractMethod<
    [target: AddressLike, data: BytesLike, value: BigNumberish],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "functionCallWithValue(address,bytes,uint256,string)"
  ): TypedContractMethod<
    [target: AddressLike, data: BytesLike, value: BigNumberish, error: string],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "isContract"
  ): TypedContractMethod<[account: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "sendValue"
  ): TypedContractMethod<
    [account: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "toString(address)"
  ): TypedContractMethod<[account: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "toString(uint256)"
  ): TypedContractMethod<[number: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "max(uint256[])"
  ): TypedContractMethod<[array: BigNumberish[]], [bigint], "view">;
  getFunction(
    nameOrSignature: "max(bytes32[])"
  ): TypedContractMethod<[array: BytesLike[]], [string], "view">;
  getFunction(
    nameOrSignature: "max(address[])"
  ): TypedContractMethod<[array: AddressLike[]], [string], "view">;
  getFunction(
    nameOrSignature: "max(uint256,uint256)"
  ): TypedContractMethod<[a: BigNumberish, b: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "min(bytes32[])"
  ): TypedContractMethod<[array: BytesLike[]], [string], "view">;
  getFunction(
    nameOrSignature: "min(address[])"
  ): TypedContractMethod<[array: AddressLike[]], [string], "view">;
  getFunction(
    nameOrSignature: "min(uint256[])"
  ): TypedContractMethod<[array: BigNumberish[]], [bigint], "view">;
  getFunction(
    nameOrSignature: "min(uint256,uint256)"
  ): TypedContractMethod<[a: BigNumberish, b: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "multicall(bytes[])"
  ): TypedContractMethod<[data: BytesLike[]], [string[]], "nonpayable">;
  getFunction(
    nameOrSignature: "multicall(bytes[])"
  ): TypedContractMethod<[data: BytesLike[]], [string[]], "nonpayable">;
  getFunction(
    nameOrSignature: "multicall(bytes[])"
  ): TypedContractMethod<[data: BytesLike[]], [string[]], "nonpayable">;
  getFunction(
    nameOrSignature: "abs"
  ): TypedContractMethod<[a: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "average"
  ): TypedContractMethod<[a: BigNumberish, b: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "sqrt"
  ): TypedContractMethod<[x: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "callRevertTest"
  ): TypedContractMethod<[], [void], "view">;
  getFunction(
    nameOrSignature: "callTest"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "sub"
  ): TypedContractMethod<[a: BigNumberish, b: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "toHexString(uint256,uint256)"
  ): TypedContractMethod<
    [value: BigNumberish, length: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "toHexString(uint256)"
  ): TypedContractMethod<[value: BigNumberish], [string], "view">;

  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
    RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleGranted(bytes32,address,address)"
  ): TypedContractEvent<
    RoleGranted_bytes32_address_address_Event.InputTuple,
    RoleGranted_bytes32_address_address_Event.OutputTuple,
    RoleGranted_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "RoleRevoked(bytes32,address,address)"
  ): TypedContractEvent<
    RoleRevoked_bytes32_address_address_Event.InputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputTuple,
    RoleRevoked_bytes32_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred(address,address)"
  ): TypedContractEvent<
    OwnershipTransferred_address_address_Event.InputTuple,
    OwnershipTransferred_address_address_Event.OutputTuple,
    OwnershipTransferred_address_address_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "Initialized(uint64)"
  ): TypedContractEvent<
    Initialized_uint64_Event.InputTuple,
    Initialized_uint64_Event.OutputTuple,
    Initialized_uint64_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "AdminChanged(address)"
  ): TypedContractEvent<
    AdminChanged_address_Event.InputTuple,
    AdminChanged_address_Event.OutputTuple,
    AdminChanged_address_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Approval(address,address,uint256)"
  ): TypedContractEvent<
    Approval_address_address_uint256_Event.InputTuple,
    Approval_address_address_uint256_Event.OutputTuple,
    Approval_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableContract(bytes32)"
  ): TypedContractEvent<
    DisableContract_bytes32_Event.InputTuple,
    DisableContract_bytes32_Event.OutputTuple,
    DisableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "DisableInvestor(address)"
  ): TypedContractEvent<
    DisableInvestor_address_Event.InputTuple,
    DisableInvestor_address_Event.OutputTuple,
    DisableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableContract(bytes32)"
  ): TypedContractEvent<
    EnableContract_bytes32_Event.InputTuple,
    EnableContract_bytes32_Event.OutputTuple,
    EnableContract_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "EnableInvestor(address)"
  ): TypedContractEvent<
    EnableInvestor_address_Event.InputTuple,
    EnableInvestor_address_Event.OutputTuple,
    EnableInvestor_address_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "NewBondDrafted(address,string,string)"
  ): TypedContractEvent<
    NewBondDrafted_address_string_string_Event.InputTuple,
    NewBondDrafted_address_string_string_Event.OutputTuple,
    NewBondDrafted_address_string_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "PublicMessage(address,address,string)"
  ): TypedContractEvent<
    PublicMessage_address_address_string_Event.InputTuple,
    PublicMessage_address_address_string_Event.OutputTuple,
    PublicMessage_address_address_string_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RegisterStatusChanged(address,string,string,uint8)"
  ): TypedContractEvent<
    RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
    RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Snapshot(uint256)"
  ): TypedContractEvent<
    Snapshot_uint256_Event.InputTuple,
    Snapshot_uint256_Event.OutputTuple,
    Snapshot_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "SnapshotTimestampChange(uint256,uint256,uint256)"
  ): TypedContractEvent<
    SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
    SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "Transfer(address,address,uint256)"
  ): TypedContractEvent<
    Transfer_address_address_uint256_Event.InputTuple,
    Transfer_address_address_uint256_Event.OutputTuple,
    Transfer_address_address_uint256_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletAddedToWhitelist(address)"
  ): TypedContractEvent<
    WalletAddedToWhitelist_address_Event.InputTuple,
    WalletAddedToWhitelist_address_Event.OutputTuple,
    WalletAddedToWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "WalletDeletedFromWhitelist(address)"
  ): TypedContractEvent<
    WalletDeletedFromWhitelist_address_Event.InputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputTuple,
    WalletDeletedFromWhitelist_address_Event.OutputObject
  >;
  getEvent(
    key: "CouponChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    CouponChanged_address_uint256_uint8_Event.InputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    CouponChanged_address_uint256_uint8_Event.InputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    CouponChanged_address_uint256_uint8_Event.InputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    CouponChanged_address_uint256_uint8_Event.InputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputTuple,
    CouponChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RedemptionChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    RedemptionChanged_address_uint256_uint8_Event.InputTuple,
    RedemptionChanged_address_uint256_uint8_Event.OutputTuple,
    RedemptionChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RedemptionChanged(address,uint256,uint8)"
  ): TypedContractEvent<
    RedemptionChanged_address_uint256_uint8_Event.InputTuple,
    RedemptionChanged_address_uint256_uint8_Event.OutputTuple,
    RedemptionChanged_address_uint256_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)"
  ): TypedContractEvent<
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
    RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GreenBondReportAdded(uint256,string)"
  ): TypedContractEvent<
    GreenBondReportAdded_uint256_string_Event.InputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputTuple,
    GreenBondReportAdded_uint256_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "GrendBondEmitted(string)"
  ): TypedContractEvent<
    GrendBondEmitted_string_Event.InputTuple,
    GrendBondEmitted_string_Event.OutputTuple,
    GrendBondEmitted_string_Event.OutputObject
  >;
  getEvent(
    key: "Paused(address)"
  ): TypedContractEvent<
    Paused_address_Event.InputTuple,
    Paused_address_Event.OutputTuple,
    Paused_address_Event.OutputObject
  >;
  getEvent(
    key: "Paused(address)"
  ): TypedContractEvent<
    Paused_address_Event.InputTuple,
    Paused_address_Event.OutputTuple,
    Paused_address_Event.OutputObject
  >;
  getEvent(
    key: "Paused(address)"
  ): TypedContractEvent<
    Paused_address_Event.InputTuple,
    Paused_address_Event.OutputTuple,
    Paused_address_Event.OutputObject
  >;
  getEvent(
    key: "Unpaused(address)"
  ): TypedContractEvent<
    Unpaused_address_Event.InputTuple,
    Unpaused_address_Event.OutputTuple,
    Unpaused_address_Event.OutputObject
  >;
  getEvent(
    key: "Unpaused(address)"
  ): TypedContractEvent<
    Unpaused_address_Event.InputTuple,
    Unpaused_address_Event.OutputTuple,
    Unpaused_address_Event.OutputObject
  >;
  getEvent(
    key: "Unpaused(address)"
  ): TypedContractEvent<
    Unpaused_address_Event.InputTuple,
    Unpaused_address_Event.OutputTuple,
    Unpaused_address_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll(address,address,bool)"
  ): TypedContractEvent<
    ApprovalForAll_address_address_bool_Event.InputTuple,
    ApprovalForAll_address_address_bool_Event.OutputTuple,
    ApprovalForAll_address_address_bool_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferBatch(address,address,address,uint256[],uint256[])"
  ): TypedContractEvent<
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
    TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "TransferSingle(address,address,address,uint256,uint256)"
  ): TypedContractEvent<
    TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
    TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
  >;
  getEvent(
    key: "URI(string,uint256)"
  ): TypedContractEvent<
    URI_string_uint256_Event.InputTuple,
    URI_string_uint256_Event.OutputTuple,
    URI_string_uint256_Event.OutputObject
  >;
  getEvent(
    key: "URI(string,uint256)"
  ): TypedContractEvent<
    URI_string_uint256_Event.InputTuple,
    URI_string_uint256_Event.OutputTuple,
    URI_string_uint256_Event.OutputObject
  >;
  getEvent(
    key: "URI(string,uint256)"
  ): TypedContractEvent<
    URI_string_uint256_Event.InputTuple,
    URI_string_uint256_Event.OutputTuple,
    URI_string_uint256_Event.OutputObject
  >;
  getEvent(
    key: "URI(string,uint256)"
  ): TypedContractEvent<
    URI_string_uint256_Event.InputTuple,
    URI_string_uint256_Event.OutputTuple,
    URI_string_uint256_Event.OutputObject
  >;
  getEvent(
    key: "NotifyTrade(address,address,uint8,uint256)"
  ): TypedContractEvent<
    NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputObject
  >;
  getEvent(
    key: "NotifyTrade(address,address,uint8,uint256)"
  ): TypedContractEvent<
    NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputObject
  >;
  getEvent(
    key: "NotifyTrade(address,address,uint8,uint256)"
  ): TypedContractEvent<
    NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputObject
  >;
  getEvent(
    key: "NotifyTrade(address,address,uint8,uint256)"
  ): TypedContractEvent<
    NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputObject
  >;
  getEvent(
    key: "NotifyTrade(address,address,uint8,uint256)"
  ): TypedContractEvent<
    NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
    NotifyTrade_address_address_uint8_uint256_Event.OutputObject
  >;
  getEvent(
    key: "PrimaryIssuanceCreated(address)"
  ): TypedContractEvent<
    PrimaryIssuanceCreated_address_Event.InputTuple,
    PrimaryIssuanceCreated_address_Event.OutputTuple,
    PrimaryIssuanceCreated_address_Event.OutputObject
  >;
  getEvent(
    key: "PrimaryIssuanceCreated(address)"
  ): TypedContractEvent<
    PrimaryIssuanceCreated_address_Event.InputTuple,
    PrimaryIssuanceCreated_address_Event.OutputTuple,
    PrimaryIssuanceCreated_address_Event.OutputObject
  >;

  filters: {
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.InputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputTuple,
      RoleAdminChanged_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGranted_bytes32_address_address_Event.InputTuple,
      RoleGranted_bytes32_address_address_Event.OutputTuple,
      RoleGranted_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevoked_bytes32_address_address_Event.InputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputTuple,
      RoleRevoked_bytes32_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferred_address_address_Event.InputTuple,
      OwnershipTransferred_address_address_Event.OutputTuple,
      OwnershipTransferred_address_address_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "Initialized(uint64)": TypedContractEvent<
      Initialized_uint64_Event.InputTuple,
      Initialized_uint64_Event.OutputTuple,
      Initialized_uint64_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "AdminChanged(address)": TypedContractEvent<
      AdminChanged_address_Event.InputTuple,
      AdminChanged_address_Event.OutputTuple,
      AdminChanged_address_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "Approval(address,address,uint256)": TypedContractEvent<
      Approval_address_address_uint256_Event.InputTuple,
      Approval_address_address_uint256_Event.OutputTuple,
      Approval_address_address_uint256_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableContract(bytes32)": TypedContractEvent<
      DisableContract_bytes32_Event.InputTuple,
      DisableContract_bytes32_Event.OutputTuple,
      DisableContract_bytes32_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "DisableInvestor(address)": TypedContractEvent<
      DisableInvestor_address_Event.InputTuple,
      DisableInvestor_address_Event.OutputTuple,
      DisableInvestor_address_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableContract(bytes32)": TypedContractEvent<
      EnableContract_bytes32_Event.InputTuple,
      EnableContract_bytes32_Event.OutputTuple,
      EnableContract_bytes32_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "EnableInvestor(address)": TypedContractEvent<
      EnableInvestor_address_Event.InputTuple,
      EnableInvestor_address_Event.OutputTuple,
      EnableInvestor_address_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "NewBondDrafted(address,string,string)": TypedContractEvent<
      NewBondDrafted_address_string_string_Event.InputTuple,
      NewBondDrafted_address_string_string_Event.OutputTuple,
      NewBondDrafted_address_string_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "PublicMessage(address,address,string)": TypedContractEvent<
      PublicMessage_address_address_string_Event.InputTuple,
      PublicMessage_address_address_string_Event.OutputTuple,
      PublicMessage_address_address_string_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "RegisterStatusChanged(address,string,string,uint8)": TypedContractEvent<
      RegisterStatusChanged_address_string_string_uint8_Event.InputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputTuple,
      RegisterStatusChanged_address_string_string_uint8_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "Snapshot(uint256)": TypedContractEvent<
      Snapshot_uint256_Event.InputTuple,
      Snapshot_uint256_Event.OutputTuple,
      Snapshot_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "SnapshotTimestampChange(uint256,uint256,uint256)": TypedContractEvent<
      SnapshotTimestampChange_uint256_uint256_uint256_Event.InputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputTuple,
      SnapshotTimestampChange_uint256_uint256_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "Transfer(address,address,uint256)": TypedContractEvent<
      Transfer_address_address_uint256_Event.InputTuple,
      Transfer_address_address_uint256_Event.OutputTuple,
      Transfer_address_address_uint256_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletAddedToWhitelist(address)": TypedContractEvent<
      WalletAddedToWhitelist_address_Event.InputTuple,
      WalletAddedToWhitelist_address_Event.OutputTuple,
      WalletAddedToWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "WalletDeletedFromWhitelist(address)": TypedContractEvent<
      WalletDeletedFromWhitelist_address_Event.InputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputTuple,
      WalletDeletedFromWhitelist_address_Event.OutputObject
    >;
    "CouponChanged(address,uint256,uint8)": TypedContractEvent<
      CouponChanged_address_uint256_uint8_Event.InputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputObject
    >;
    "CouponChanged(address,uint256,uint8)": TypedContractEvent<
      CouponChanged_address_uint256_uint8_Event.InputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputObject
    >;
    "CouponChanged(address,uint256,uint8)": TypedContractEvent<
      CouponChanged_address_uint256_uint8_Event.InputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputObject
    >;
    "CouponChanged(address,uint256,uint8)": TypedContractEvent<
      CouponChanged_address_uint256_uint8_Event.InputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputTuple,
      CouponChanged_address_uint256_uint8_Event.OutputObject
    >;
    "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "CouponPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      CouponPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "RedemptionChanged(address,uint256,uint8)": TypedContractEvent<
      RedemptionChanged_address_uint256_uint8_Event.InputTuple,
      RedemptionChanged_address_uint256_uint8_Event.OutputTuple,
      RedemptionChanged_address_uint256_uint8_Event.OutputObject
    >;
    "RedemptionChanged(address,uint256,uint8)": TypedContractEvent<
      RedemptionChanged_address_uint256_uint8_Event.InputTuple,
      RedemptionChanged_address_uint256_uint8_Event.OutputTuple,
      RedemptionChanged_address_uint256_uint8_Event.OutputObject
    >;
    "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "RedemptionPaymentStatusChanged(address,uint256,address,uint8,uint8)": TypedContractEvent<
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.InputTuple,
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputTuple,
      RedemptionPaymentStatusChanged_address_uint256_address_uint8_uint8_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GreenBondReportAdded(uint256,string)": TypedContractEvent<
      GreenBondReportAdded_uint256_string_Event.InputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputTuple,
      GreenBondReportAdded_uint256_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "GrendBondEmitted(string)": TypedContractEvent<
      GrendBondEmitted_string_Event.InputTuple,
      GrendBondEmitted_string_Event.OutputTuple,
      GrendBondEmitted_string_Event.OutputObject
    >;
    "Paused(address)": TypedContractEvent<
      Paused_address_Event.InputTuple,
      Paused_address_Event.OutputTuple,
      Paused_address_Event.OutputObject
    >;
    "Paused(address)": TypedContractEvent<
      Paused_address_Event.InputTuple,
      Paused_address_Event.OutputTuple,
      Paused_address_Event.OutputObject
    >;
    "Paused(address)": TypedContractEvent<
      Paused_address_Event.InputTuple,
      Paused_address_Event.OutputTuple,
      Paused_address_Event.OutputObject
    >;
    "Unpaused(address)": TypedContractEvent<
      Unpaused_address_Event.InputTuple,
      Unpaused_address_Event.OutputTuple,
      Unpaused_address_Event.OutputObject
    >;
    "Unpaused(address)": TypedContractEvent<
      Unpaused_address_Event.InputTuple,
      Unpaused_address_Event.OutputTuple,
      Unpaused_address_Event.OutputObject
    >;
    "Unpaused(address)": TypedContractEvent<
      Unpaused_address_Event.InputTuple,
      Unpaused_address_Event.OutputTuple,
      Unpaused_address_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAll_address_address_bool_Event.InputTuple,
      ApprovalForAll_address_address_bool_Event.OutputTuple,
      ApprovalForAll_address_address_bool_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferBatch(address,address,address,uint256[],uint256[])": TypedContractEvent<
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.InputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputTuple,
      TransferBatch_address_address_address_uint256_array_uint256_array_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "TransferSingle(address,address,address,uint256,uint256)": TypedContractEvent<
      TransferSingle_address_address_address_uint256_uint256_Event.InputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputTuple,
      TransferSingle_address_address_address_uint256_uint256_Event.OutputObject
    >;
    "URI(string,uint256)": TypedContractEvent<
      URI_string_uint256_Event.InputTuple,
      URI_string_uint256_Event.OutputTuple,
      URI_string_uint256_Event.OutputObject
    >;
    "URI(string,uint256)": TypedContractEvent<
      URI_string_uint256_Event.InputTuple,
      URI_string_uint256_Event.OutputTuple,
      URI_string_uint256_Event.OutputObject
    >;
    "URI(string,uint256)": TypedContractEvent<
      URI_string_uint256_Event.InputTuple,
      URI_string_uint256_Event.OutputTuple,
      URI_string_uint256_Event.OutputObject
    >;
    "URI(string,uint256)": TypedContractEvent<
      URI_string_uint256_Event.InputTuple,
      URI_string_uint256_Event.OutputTuple,
      URI_string_uint256_Event.OutputObject
    >;
    "NotifyTrade(address,address,uint8,uint256)": TypedContractEvent<
      NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputObject
    >;
    "NotifyTrade(address,address,uint8,uint256)": TypedContractEvent<
      NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputObject
    >;
    "NotifyTrade(address,address,uint8,uint256)": TypedContractEvent<
      NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputObject
    >;
    "NotifyTrade(address,address,uint8,uint256)": TypedContractEvent<
      NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputObject
    >;
    "NotifyTrade(address,address,uint8,uint256)": TypedContractEvent<
      NotifyTrade_address_address_uint8_uint256_Event.InputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputTuple,
      NotifyTrade_address_address_uint8_uint256_Event.OutputObject
    >;
    "PrimaryIssuanceCreated(address)": TypedContractEvent<
      PrimaryIssuanceCreated_address_Event.InputTuple,
      PrimaryIssuanceCreated_address_Event.OutputTuple,
      PrimaryIssuanceCreated_address_Event.OutputObject
    >;
    "PrimaryIssuanceCreated(address)": TypedContractEvent<
      PrimaryIssuanceCreated_address_Event.InputTuple,
      PrimaryIssuanceCreated_address_Event.OutputTuple,
      PrimaryIssuanceCreated_address_Event.OutputObject
    >;
  };
}
